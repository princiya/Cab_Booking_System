{"version":3,"sources":["meteor://ðŸ’»app/lib/appointmentList.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/appointmentList.js","sourcesContent":["appointmentList = new Meteor.Collection(\"appointmentList\");\nappointmentList.attachSchema(new SimpleSchema({\n\tfirstname: {\n\t\ttype: String,\n\t\tlabel: \"First Name\",\n\t\tmax: 100\n\t},\n\tlastname: {\n\t\ttype: String,\n\t\tlabel: \"Last Name\",\n\t\tmax: 100\n\t},\n\tphone: {\n\t\ttype: String,\n\t\tlabel: \"Phone Number\",\n\t\toptional: true\n\t},\n\tnotes: {\n\t\ttype: String,\n\t\tlabel: \"Address\",\n\t\toptional: true\n\t},\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \" Start Time\",\n\t\tindex: true,\n\t\tcustom: function() {\n\t\t\treturn checkDate(this, true);\n\t\t}\n\t},\n\tlength: {\n\t\ttype: Number,\n\t\tlabel: \"Cab booking duration\",\n\t\tmin: 5,\n\t\t\n\t\tautoValue: function() {\n\t\t\tif (typeof this.value == 'undefined') {\n\t\t\t\tvar cleanDate = moment(this.field('date').value).startOf('day').toDate();\n\t\t\t\tvar provObject = getProvObject(cleanDate, this.field('providerName').value);\n\t\t\t\treturn provObject.appointmentLength;\n\t\t\t}\n\t\t},\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"multiple\";\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\",\n\t\tautoform: {\n\t\t\tomit: true\n\t\t}\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tautoform: {\n\t\t\tomit: true\n\t\t},\n\t\tautoValue: function() {\n\t\t\tif (this.isInsert) {\n\t\t\t\treturn new Date();\n\t\t\t} else if (this.isUpsert) {\n\t\t\t\treturn {$setOnInsert: new Date()};\n\t\t\t} else {\n\t\t\t\tthis.unset();\n\t\t\t}\n\t\t}\n\t}\n}));\nappointmentList.simpleSchema().messages({\n\t\n\tmultiple: \"[value] must be a multiple of 5.\", \n\toverlappingDates:\"Time slot overlap. Try later\",\n\toverlappingBlockout:\"That time overlaps a blockout.\",\n\tdateOutOfBounds: \"Appointment time must be within [value] o'clock.\"\n});\n"]}