{"version":3,"sources":["meteor://ðŸ’»app/server/publications.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/publications.js","sourcesContent":["Meteor.publish(\"appointmentList\", function (date, providerName) {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\tconsole.log(date);\n\tvar startDate = moment(date).startOf('day').toDate();\n\tvar endDate = moment(date).endOf('day').toDate();\n\t\n\treturn appointmentList.find({\"date\": {$gte: startDate, $lt: endDate}, \"providerName\": providerName});\n});\nMeteor.publish(null, function() {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\tif (Roles.userIsInRole(this.userId, 'provider')) {\n\t//\tconsole.log(\"providerSubscription subscribed by provider\");\n\t\treturn providers.find({name: Meteor.users.findOne(this.userId).providerName});\n\t}\n\t//console.log(\"providerSubscription subscribed by non-provider\");\n\treturn providers.find();\n});\nMeteor.publish(\"unusualDays\", function(thedate) {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\treturn unusualDays.find({date:thedate})\n});\nMeteor.publish(\"unusualDaysRange\", function(dateRangeStart, dateRangeEnd) {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\treturn unusualDays.find({date: {$gte: dateRangeStart, $lt: dateRangeEnd}})\n});\nMeteor.publish(null, function (){ \n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n  return Meteor.roles.find({});//publish all roles without sub\n});\nMeteor.publish(null, function(){\n\tif(!this.userId) {\n\t\tthis.stop();\n\t} else if (Roles.userIsInRole(this.userId, \"provider\")) {\n\t\treturn Meteor.users.find(this.userId, {fields: {providerName: 1}});\n\t}\n});\nMeteor.publish(\"userList\", function() {\n\tconsole.log(\"userlist caller is admin? \" + Roles.userIsInRole(this.userId, 'admin'));\n\tif(!this.userId || !Roles.userIsInRole(this.userId, 'admin')) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\treturn Meteor.users.find();\n});\nMeteor.publish(\"blockouts\", function(date, provider) {\n\ttry {\n\t//\tconsole.log(\"blockouts subscribed for:  \" + provider);\n\t}\n\tcatch(e) {\n\t\tconsole.error(\"blockouts subscribed without provider name\");\n\t\t//this.stop();\n\t\t//return;\n\t}\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\tvar startDate = moment(date).startOf('day').toDate();\n\tvar endDate = moment(date).endOf('day').toDate();\n\t//console.log({date: {$gte: startDate, $lt: endDate}, providerName: provider});\n\t//console.log(blockouts.find().fetch());\n\treturn blockouts.find({date: {$gte: startDate, $lt: endDate}, providerName: provider});\n});\nMeteor.publish(\"singleAppoint\", function(id) {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\tconsole.log('singleAppoint subbed: '+id);\n\treturn appointmentList.find(id);\n});\nMeteor.publish(\"singleBlockout\", function(id) {\n\tif(!this.userId) {\n\t\tthis.stop();\n\t\treturn;\n\t}\n\treturn blockouts.find(id);\n});"]}