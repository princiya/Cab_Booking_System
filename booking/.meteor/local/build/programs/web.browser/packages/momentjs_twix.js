//////////////////////////////////////////////////////////////////////////
//                                                                      //
// This is a generated file. You can view the original                  //
// source in your browser if your browser supports source maps.         //
// Source maps are supported by all recent versions of Chrome, Safari,  //
// and Firefox, and by Internet Explorer 11.                            //
//                                                                      //
//////////////////////////////////////////////////////////////////////////


(function () {

/* Imports */
var Meteor = Package.meteor.Meteor;
var moment = Package['momentjs:moment'].moment;

(function(){

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                //
// packages/momentjs_twix/dist/twix.js                                                                            //
//                                                                                                                //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                  //
// Generated by CoffeeScript 1.10.0                                                                               // 1
(function() {                                                                                                     // 2
  var hasModule, isArray, makeTwix,                                                                               // 3
    slice = [].slice;                                                                                             // 4
                                                                                                                  // 5
  hasModule = (typeof module !== "undefined" && module !== null) && (module.exports != null);                     // 6
                                                                                                                  // 7
  isArray = function(input) {                                                                                     // 8
    return Object.prototype.toString.call(input) === '[object Array]';                                            // 9
  };                                                                                                              // 10
                                                                                                                  // 11
  makeTwix = function(moment) {                                                                                   // 12
    var Twix;                                                                                                     // 13
    if (moment == null) {                                                                                         // 14
      throw new Error("Can't find moment");                                                                       // 15
    }                                                                                                             // 16
    Twix = (function() {                                                                                          // 17
      function Twix(start, end, parseFormat, options) {                                                           // 18
        var ref;                                                                                                  // 19
        if (options == null) {                                                                                    // 20
          options = {};                                                                                           // 21
        }                                                                                                         // 22
        if (typeof parseFormat !== 'string') {                                                                    // 23
          options = parseFormat != null ? parseFormat : {};                                                       // 24
          parseFormat = null;                                                                                     // 25
        }                                                                                                         // 26
        if (typeof options === 'boolean') {                                                                       // 27
          options = {                                                                                             // 28
            allDay: options                                                                                       // 29
          };                                                                                                      // 30
        }                                                                                                         // 31
        this._oStart = moment(start, parseFormat, options.parseStrict);                                           // 32
        this._oEnd = moment(end, parseFormat, options.parseStrict);                                               // 33
        this.allDay = (ref = options.allDay) != null ? ref : false;                                               // 34
        this._mutated();                                                                                          // 35
      }                                                                                                           // 36
                                                                                                                  // 37
      Twix._extend = function() {                                                                                 // 38
        var attr, first, j, len, other, others;                                                                   // 39
        first = arguments[0], others = 2 <= arguments.length ? slice.call(arguments, 1) : [];                     // 40
        for (j = 0, len = others.length; j < len; j++) {                                                          // 41
          other = others[j];                                                                                      // 42
          for (attr in other) {                                                                                   // 43
            if (typeof other[attr] !== 'undefined') {                                                             // 44
              first[attr] = other[attr];                                                                          // 45
            }                                                                                                     // 46
          }                                                                                                       // 47
        }                                                                                                         // 48
        return first;                                                                                             // 49
      };                                                                                                          // 50
                                                                                                                  // 51
      Twix.prototype.start = function() {                                                                         // 52
        return this._start.clone();                                                                               // 53
      };                                                                                                          // 54
                                                                                                                  // 55
      Twix.prototype.end = function() {                                                                           // 56
        return this._end.clone();                                                                                 // 57
      };                                                                                                          // 58
                                                                                                                  // 59
      Twix.prototype.isSame = function(period) {                                                                  // 60
        return this._start.isSame(this._end, period);                                                             // 61
      };                                                                                                          // 62
                                                                                                                  // 63
      Twix.prototype.length = function(period) {                                                                  // 64
        return this._displayEnd.diff(this._start, period);                                                        // 65
      };                                                                                                          // 66
                                                                                                                  // 67
      Twix.prototype.count = function(period) {                                                                   // 68
        var end, start;                                                                                           // 69
        start = this.start().startOf(period);                                                                     // 70
        end = this.end().startOf(period);                                                                         // 71
        return end.diff(start, period) + 1;                                                                       // 72
      };                                                                                                          // 73
                                                                                                                  // 74
      Twix.prototype.countInner = function(period) {                                                              // 75
        var end, ref, start;                                                                                      // 76
        ref = this._inner(period), start = ref[0], end = ref[1];                                                  // 77
        if (start >= end) {                                                                                       // 78
          return 0;                                                                                               // 79
        }                                                                                                         // 80
        return end.diff(start, period);                                                                           // 81
      };                                                                                                          // 82
                                                                                                                  // 83
      Twix.prototype.iterate = function(intervalAmount, period, minHours) {                                       // 84
        var end, hasNext, ref, start;                                                                             // 85
        ref = this._prepIterateInputs(intervalAmount, period, minHours), intervalAmount = ref[0], period = ref[1], minHours = ref[2];
        start = this.start().startOf(period);                                                                     // 87
        end = this.end().startOf(period);                                                                         // 88
        if (this.allDay) {                                                                                        // 89
          end = end.add(1, 'd');                                                                                  // 90
        }                                                                                                         // 91
        hasNext = (function(_this) {                                                                              // 92
          return function() {                                                                                     // 93
            return (!_this.allDay && start <= end && (!minHours || !start.isSame(end) || _this._end.hours() > minHours)) || (_this.allDay && start < end);
          };                                                                                                      // 95
        })(this);                                                                                                 // 96
        return this._iterateHelper(period, start, hasNext, intervalAmount);                                       // 97
      };                                                                                                          // 98
                                                                                                                  // 99
      Twix.prototype.iterateInner = function(intervalAmount, period) {                                            // 100
        var end, hasNext, ref, ref1, start;                                                                       // 101
        ref = this._prepIterateInputs(intervalAmount, period), intervalAmount = ref[0], period = ref[1];          // 102
        ref1 = this._inner(period, intervalAmount), start = ref1[0], end = ref1[1];                               // 103
        hasNext = function() {                                                                                    // 104
          return start < end;                                                                                     // 105
        };                                                                                                        // 106
        return this._iterateHelper(period, start, hasNext, intervalAmount);                                       // 107
      };                                                                                                          // 108
                                                                                                                  // 109
      Twix.prototype.humanizeLength = function() {                                                                // 110
        if (this.allDay) {                                                                                        // 111
          if (this.isSame('d')) {                                                                                 // 112
            return 'all day';                                                                                     // 113
          } else {                                                                                                // 114
            return this._start.from(this.end().add(1, 'd'), true);                                                // 115
          }                                                                                                       // 116
        } else {                                                                                                  // 117
          return this._start.from(this._end, true);                                                               // 118
        }                                                                                                         // 119
      };                                                                                                          // 120
                                                                                                                  // 121
      Twix.prototype.asDuration = function(units) {                                                               // 122
        var diff;                                                                                                 // 123
        diff = this._end.diff(this._start);                                                                       // 124
        return moment.duration(diff);                                                                             // 125
      };                                                                                                          // 126
                                                                                                                  // 127
      Twix.prototype.isPast = function() {                                                                        // 128
        return this._lastMilli < moment();                                                                        // 129
      };                                                                                                          // 130
                                                                                                                  // 131
      Twix.prototype.isFuture = function() {                                                                      // 132
        return this._start > moment();                                                                            // 133
      };                                                                                                          // 134
                                                                                                                  // 135
      Twix.prototype.isCurrent = function() {                                                                     // 136
        return !this.isPast() && !this.isFuture();                                                                // 137
      };                                                                                                          // 138
                                                                                                                  // 139
      Twix.prototype.contains = function(mom) {                                                                   // 140
        if (!moment.isMoment(mom)) {                                                                              // 141
          mom = moment(mom);                                                                                      // 142
        }                                                                                                         // 143
        return this._start <= mom && this._lastMilli >= mom;                                                      // 144
      };                                                                                                          // 145
                                                                                                                  // 146
      Twix.prototype.isEmpty = function() {                                                                       // 147
        return this._start.isSame(this._displayEnd);                                                              // 148
      };                                                                                                          // 149
                                                                                                                  // 150
      Twix.prototype.overlaps = function(other) {                                                                 // 151
        return this._displayEnd.isAfter(other._start) && this._start.isBefore(other._displayEnd);                 // 152
      };                                                                                                          // 153
                                                                                                                  // 154
      Twix.prototype.engulfs = function(other) {                                                                  // 155
        return this._start <= other._start && this._displayEnd >= other._displayEnd;                              // 156
      };                                                                                                          // 157
                                                                                                                  // 158
      Twix.prototype.union = function(other) {                                                                    // 159
        var allDay, newEnd, newStart;                                                                             // 160
        allDay = this.allDay && other.allDay;                                                                     // 161
        newStart = this._start < other._start ? this._start : other._start;                                       // 162
        newEnd = this._lastMilli > other._lastMilli ? (allDay ? this._end : this._displayEnd) : (allDay ? other._end : other._displayEnd);
        return new Twix(newStart, newEnd, allDay);                                                                // 164
      };                                                                                                          // 165
                                                                                                                  // 166
      Twix.prototype.intersection = function(other) {                                                             // 167
        var allDay, newEnd, newStart;                                                                             // 168
        allDay = this.allDay && other.allDay;                                                                     // 169
        newStart = this._start > other._start ? this._start : other._start;                                       // 170
        newEnd = this._lastMilli < other._lastMilli ? (allDay ? this._end : this._displayEnd) : (allDay ? other._end : other._displayEnd);
        return new Twix(newStart, newEnd, allDay);                                                                // 172
      };                                                                                                          // 173
                                                                                                                  // 174
      Twix.prototype.xor = function() {                                                                           // 175
        var allDay, arr, endTime, i, item, j, k, last, len, len1, o, open, other, others, ref, results, start, t;
        others = 1 <= arguments.length ? slice.call(arguments, 0) : [];                                           // 177
        open = 0;                                                                                                 // 178
        start = null;                                                                                             // 179
        results = [];                                                                                             // 180
        allDay = ((function() {                                                                                   // 181
          var j, len, results1;                                                                                   // 182
          results1 = [];                                                                                          // 183
          for (j = 0, len = others.length; j < len; j++) {                                                        // 184
            o = others[j];                                                                                        // 185
            if (o.allDay) {                                                                                       // 186
              results1.push(o);                                                                                   // 187
            }                                                                                                     // 188
          }                                                                                                       // 189
          return results1;                                                                                        // 190
        })()).length === others.length;                                                                           // 191
        arr = [];                                                                                                 // 192
        ref = [this].concat(others);                                                                              // 193
        for (i = j = 0, len = ref.length; j < len; i = ++j) {                                                     // 194
          item = ref[i];                                                                                          // 195
          arr.push({                                                                                              // 196
            time: item._start,                                                                                    // 197
            i: i,                                                                                                 // 198
            type: 0                                                                                               // 199
          });                                                                                                     // 200
          arr.push({                                                                                              // 201
            time: item._displayEnd,                                                                               // 202
            i: i,                                                                                                 // 203
            type: 1                                                                                               // 204
          });                                                                                                     // 205
        }                                                                                                         // 206
        arr = arr.sort(function(a, b) {                                                                           // 207
          return a.time - b.time;                                                                                 // 208
        });                                                                                                       // 209
        for (k = 0, len1 = arr.length; k < len1; k++) {                                                           // 210
          other = arr[k];                                                                                         // 211
          if (other.type === 1) {                                                                                 // 212
            open -= 1;                                                                                            // 213
          }                                                                                                       // 214
          if (open === other.type) {                                                                              // 215
            start = other.time;                                                                                   // 216
          }                                                                                                       // 217
          if (open === (other.type + 1) % 2) {                                                                    // 218
            if (start) {                                                                                          // 219
              last = results[results.length - 1];                                                                 // 220
              if (last && last._end.isSame(start)) {                                                              // 221
                last._oEnd = other.time;                                                                          // 222
                last._mutated();                                                                                  // 223
              } else {                                                                                            // 224
                endTime = allDay ? other.time.clone().subtract(1, 'd') : other.time;                              // 225
                t = new Twix(start, endTime, allDay);                                                             // 226
                if (!t.isEmpty()) {                                                                               // 227
                  results.push(t);                                                                                // 228
                }                                                                                                 // 229
              }                                                                                                   // 230
            }                                                                                                     // 231
            start = null;                                                                                         // 232
          }                                                                                                       // 233
          if (other.type === 0) {                                                                                 // 234
            open += 1;                                                                                            // 235
          }                                                                                                       // 236
        }                                                                                                         // 237
        return results;                                                                                           // 238
      };                                                                                                          // 239
                                                                                                                  // 240
      Twix.prototype.difference = function() {                                                                    // 241
        var j, len, others, ref, results1, t;                                                                     // 242
        others = 1 <= arguments.length ? slice.call(arguments, 0) : [];                                           // 243
        ref = this.xor.apply(this, others).map((function(_this) {                                                 // 244
          return function(i) {                                                                                    // 245
            return _this.intersection(i);                                                                         // 246
          };                                                                                                      // 247
        })(this));                                                                                                // 248
        results1 = [];                                                                                            // 249
        for (j = 0, len = ref.length; j < len; j++) {                                                             // 250
          t = ref[j];                                                                                             // 251
          if (!t.isEmpty() && t.isValid()) {                                                                      // 252
            results1.push(t);                                                                                     // 253
          }                                                                                                       // 254
        }                                                                                                         // 255
        return results1;                                                                                          // 256
      };                                                                                                          // 257
                                                                                                                  // 258
      Twix.prototype.split = function() {                                                                         // 259
        var args, dur, end, final, i, mom, start, time, times, vals;                                              // 260
        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];                                             // 261
        end = start = this.start();                                                                               // 262
        if (moment.isDuration(args[0])) {                                                                         // 263
          dur = args[0];                                                                                          // 264
        } else if ((!moment.isMoment(args[0]) && !isArray(args[0]) && typeof args[0] === 'object') || (typeof args[0] === 'number' && typeof args[1] === 'string')) {
          dur = moment.duration(args[0], args[1]);                                                                // 266
        } else if (isArray(args[0])) {                                                                            // 267
          times = args[0];                                                                                        // 268
        } else {                                                                                                  // 269
          times = args;                                                                                           // 270
        }                                                                                                         // 271
        if (times) {                                                                                              // 272
          times = (function() {                                                                                   // 273
            var j, len, results1;                                                                                 // 274
            results1 = [];                                                                                        // 275
            for (j = 0, len = times.length; j < len; j++) {                                                       // 276
              time = times[j];                                                                                    // 277
              results1.push(moment(time));                                                                        // 278
            }                                                                                                     // 279
            return results1;                                                                                      // 280
          })();                                                                                                   // 281
          times = ((function() {                                                                                  // 282
            var j, len, results1;                                                                                 // 283
            results1 = [];                                                                                        // 284
            for (j = 0, len = times.length; j < len; j++) {                                                       // 285
              mom = times[j];                                                                                     // 286
              if (mom.isValid() && mom >= start) {                                                                // 287
                results1.push(mom);                                                                               // 288
              }                                                                                                   // 289
            }                                                                                                     // 290
            return results1;                                                                                      // 291
          })()).sort();                                                                                           // 292
        }                                                                                                         // 293
        if ((dur && dur.asMilliseconds() === 0) || (times && times.length === 0)) {                               // 294
          return [this];                                                                                          // 295
        }                                                                                                         // 296
        vals = [];                                                                                                // 297
        i = 0;                                                                                                    // 298
        final = this._displayEnd;                                                                                 // 299
        while (start < final && ((times == null) || times[i])) {                                                  // 300
          end = dur ? start.clone().add(dur) : times[i].clone();                                                  // 301
          end = moment.min(final, end);                                                                           // 302
          if (!start.isSame(end)) {                                                                               // 303
            vals.push(moment.twix(start, end));                                                                   // 304
          }                                                                                                       // 305
          start = end;                                                                                            // 306
          i += 1;                                                                                                 // 307
        }                                                                                                         // 308
        if (!end.isSame(this._displayEnd) && times) {                                                             // 309
          vals.push(moment.twix(end, this._displayEnd));                                                          // 310
        }                                                                                                         // 311
        return vals;                                                                                              // 312
      };                                                                                                          // 313
                                                                                                                  // 314
      Twix.prototype.isValid = function() {                                                                       // 315
        return this._start.isValid() && this._end.isValid() && this._start <= this._displayEnd;                   // 316
      };                                                                                                          // 317
                                                                                                                  // 318
      Twix.prototype.equals = function(other) {                                                                   // 319
        return (other instanceof Twix) && this.allDay === other.allDay && this._start.valueOf() === other._start.valueOf() && this._end.valueOf() === other._end.valueOf();
      };                                                                                                          // 321
                                                                                                                  // 322
      Twix.prototype.toString = function() {                                                                      // 323
        return "{start: " + (this._start.format()) + ", end: " + (this._end.format()) + ", allDay: " + (this.allDay ? 'true' : 'false') + "}";
      };                                                                                                          // 325
                                                                                                                  // 326
      Twix.prototype.simpleFormat = function(momentOpts, inopts) {                                                // 327
        var options, s;                                                                                           // 328
        options = {                                                                                               // 329
          allDay: '(all day)',                                                                                    // 330
          template: Twix.formatTemplate                                                                           // 331
        };                                                                                                        // 332
        Twix._extend(options, inopts || {});                                                                      // 333
        s = options.template(this._start.format(momentOpts), this._end.format(momentOpts));                       // 334
        if (this.allDay && options.allDay) {                                                                      // 335
          s += " " + options.allDay;                                                                              // 336
        }                                                                                                         // 337
        return s;                                                                                                 // 338
      };                                                                                                          // 339
                                                                                                                  // 340
      Twix.prototype.format = function(inopts) {                                                                  // 341
        var common_bucket, end_bucket, fold, format, fs, global_first, goesIntoTheMorning, j, len, momentHourFormat, needDate, needsMeridiem, options, process, start_bucket, together;
        if (this.isEmpty()) {                                                                                     // 343
          return '';                                                                                              // 344
        }                                                                                                         // 345
        momentHourFormat = this._start.localeData()._longDateFormat['LT'][0];                                     // 346
        options = {                                                                                               // 347
          groupMeridiems: true,                                                                                   // 348
          spaceBeforeMeridiem: true,                                                                              // 349
          showDate: true,                                                                                         // 350
          showDayOfWeek: false,                                                                                   // 351
          implicitMinutes: true,                                                                                  // 352
          implicitYear: true,                                                                                     // 353
          yearFormat: 'YYYY',                                                                                     // 354
          monthFormat: 'MMM',                                                                                     // 355
          weekdayFormat: 'ddd',                                                                                   // 356
          dayFormat: 'D',                                                                                         // 357
          meridiemFormat: 'A',                                                                                    // 358
          hourFormat: momentHourFormat,                                                                           // 359
          minuteFormat: 'mm',                                                                                     // 360
          allDay: 'all day',                                                                                      // 361
          explicitAllDay: false,                                                                                  // 362
          lastNightEndsAt: 0,                                                                                     // 363
          template: Twix.formatTemplate                                                                           // 364
        };                                                                                                        // 365
        Twix._extend(options, inopts || {});                                                                      // 366
        fs = [];                                                                                                  // 367
        if (inopts && (inopts.twentyFourHour != null)) {                                                          // 368
          options.hourFormat = inopts.twentyFourHour ? options.hourFormat.replace('h', 'H') : options.hourFormat.replace('H', 'h');
        }                                                                                                         // 370
        needsMeridiem = options.hourFormat && options.hourFormat[0] === 'h';                                      // 371
        goesIntoTheMorning = options.lastNightEndsAt > 0 && !this.allDay && this.end().startOf('d').valueOf() === this.start().add(1, 'd').startOf('d').valueOf() && this._start.hours() > 12 && this._end.hours() < options.lastNightEndsAt;
        needDate = options.showDate || (!this.isSame('d') && !goesIntoTheMorning);                                // 373
        if (this.allDay && this.isSame('d') && (!options.showDate || options.explicitAllDay)) {                   // 374
          fs.push({                                                                                               // 375
            name: 'all day simple',                                                                               // 376
            fn: function() {                                                                                      // 377
              return options.allDay;                                                                              // 378
            },                                                                                                    // 379
            pre: ' ',                                                                                             // 380
            slot: 0                                                                                               // 381
          });                                                                                                     // 382
        }                                                                                                         // 383
        if (needDate && (!options.implicitYear || this._start.year() !== moment().year() || !this.isSame('y'))) {
          fs.push({                                                                                               // 385
            name: 'year',                                                                                         // 386
            fn: function(date) {                                                                                  // 387
              return date.format(options.yearFormat);                                                             // 388
            },                                                                                                    // 389
            pre: ', ',                                                                                            // 390
            slot: 4                                                                                               // 391
          });                                                                                                     // 392
        }                                                                                                         // 393
        if (!this.allDay && needDate) {                                                                           // 394
          fs.push({                                                                                               // 395
            name: 'all day month',                                                                                // 396
            fn: function(date) {                                                                                  // 397
              return date.format(options.monthFormat + " " + options.dayFormat);                                  // 398
            },                                                                                                    // 399
            ignoreEnd: function() {                                                                               // 400
              return goesIntoTheMorning;                                                                          // 401
            },                                                                                                    // 402
            pre: ' ',                                                                                             // 403
            slot: 2                                                                                               // 404
          });                                                                                                     // 405
        }                                                                                                         // 406
        if (this.allDay && needDate) {                                                                            // 407
          fs.push({                                                                                               // 408
            name: 'month',                                                                                        // 409
            fn: function(date) {                                                                                  // 410
              return date.format(options.monthFormat);                                                            // 411
            },                                                                                                    // 412
            pre: ' ',                                                                                             // 413
            slot: 2                                                                                               // 414
          });                                                                                                     // 415
        }                                                                                                         // 416
        if (this.allDay && needDate) {                                                                            // 417
          fs.push({                                                                                               // 418
            name: 'date',                                                                                         // 419
            fn: function(date) {                                                                                  // 420
              return date.format(options.dayFormat);                                                              // 421
            },                                                                                                    // 422
            pre: ' ',                                                                                             // 423
            slot: 3                                                                                               // 424
          });                                                                                                     // 425
        }                                                                                                         // 426
        if (needDate && options.showDayOfWeek) {                                                                  // 427
          fs.push({                                                                                               // 428
            name: 'day of week',                                                                                  // 429
            fn: function(date) {                                                                                  // 430
              return date.format(options.weekdayFormat);                                                          // 431
            },                                                                                                    // 432
            pre: ' ',                                                                                             // 433
            slot: 1                                                                                               // 434
          });                                                                                                     // 435
        }                                                                                                         // 436
        if (options.groupMeridiems && needsMeridiem && !this.allDay) {                                            // 437
          fs.push({                                                                                               // 438
            name: 'meridiem',                                                                                     // 439
            fn: function(t) {                                                                                     // 440
              return t.format(options.meridiemFormat);                                                            // 441
            },                                                                                                    // 442
            slot: 6,                                                                                              // 443
            pre: options.spaceBeforeMeridiem ? ' ' : ''                                                           // 444
          });                                                                                                     // 445
        }                                                                                                         // 446
        if (!this.allDay) {                                                                                       // 447
          fs.push({                                                                                               // 448
            name: 'time',                                                                                         // 449
            fn: function(date) {                                                                                  // 450
              var str;                                                                                            // 451
              str = date.minutes() === 0 && options.implicitMinutes && needsMeridiem ? date.format(options.hourFormat) : date.format(options.hourFormat + ":" + options.minuteFormat);
              if (!options.groupMeridiems && needsMeridiem) {                                                     // 453
                if (options.spaceBeforeMeridiem) {                                                                // 454
                  str += ' ';                                                                                     // 455
                }                                                                                                 // 456
                str += date.format(options.meridiemFormat);                                                       // 457
              }                                                                                                   // 458
              return str;                                                                                         // 459
            },                                                                                                    // 460
            slot: 5,                                                                                              // 461
            pre: ', '                                                                                             // 462
          });                                                                                                     // 463
        }                                                                                                         // 464
        start_bucket = [];                                                                                        // 465
        end_bucket = [];                                                                                          // 466
        common_bucket = [];                                                                                       // 467
        together = true;                                                                                          // 468
        process = (function(_this) {                                                                              // 469
          return function(format) {                                                                               // 470
            var end_str, start_group, start_str;                                                                  // 471
            start_str = format.fn(_this._start);                                                                  // 472
            end_str = format.ignoreEnd && format.ignoreEnd() ? start_str : format.fn(_this._end);                 // 473
            start_group = {                                                                                       // 474
              format: format,                                                                                     // 475
              value: function() {                                                                                 // 476
                return start_str;                                                                                 // 477
              }                                                                                                   // 478
            };                                                                                                    // 479
            if (end_str === start_str && together) {                                                              // 480
              return common_bucket.push(start_group);                                                             // 481
            } else {                                                                                              // 482
              if (together) {                                                                                     // 483
                together = false;                                                                                 // 484
                common_bucket.push({                                                                              // 485
                  format: {                                                                                       // 486
                    slot: format.slot,                                                                            // 487
                    pre: ''                                                                                       // 488
                  },                                                                                              // 489
                  value: function() {                                                                             // 490
                    return options.template(fold(start_bucket), fold(end_bucket, true).trim());                   // 491
                  }                                                                                               // 492
                });                                                                                               // 493
              }                                                                                                   // 494
              start_bucket.push(start_group);                                                                     // 495
              return end_bucket.push({                                                                            // 496
                format: format,                                                                                   // 497
                value: function() {                                                                               // 498
                  return end_str;                                                                                 // 499
                }                                                                                                 // 500
              });                                                                                                 // 501
            }                                                                                                     // 502
          };                                                                                                      // 503
        })(this);                                                                                                 // 504
        for (j = 0, len = fs.length; j < len; j++) {                                                              // 505
          format = fs[j];                                                                                         // 506
          process(format);                                                                                        // 507
        }                                                                                                         // 508
        global_first = true;                                                                                      // 509
        fold = function(array, skip_pre) {                                                                        // 510
          var k, len1, local_first, ref, section, str;                                                            // 511
          local_first = true;                                                                                     // 512
          str = '';                                                                                               // 513
          ref = array.sort(function(a, b) {                                                                       // 514
            return a.format.slot - b.format.slot;                                                                 // 515
          });                                                                                                     // 516
          for (k = 0, len1 = ref.length; k < len1; k++) {                                                         // 517
            section = ref[k];                                                                                     // 518
            if (!global_first) {                                                                                  // 519
              if (local_first && skip_pre) {                                                                      // 520
                str += ' ';                                                                                       // 521
              } else {                                                                                            // 522
                str += section.format.pre;                                                                        // 523
              }                                                                                                   // 524
            }                                                                                                     // 525
            str += section.value();                                                                               // 526
            global_first = false;                                                                                 // 527
            local_first = false;                                                                                  // 528
          }                                                                                                       // 529
          return str;                                                                                             // 530
        };                                                                                                        // 531
        return fold(common_bucket);                                                                               // 532
      };                                                                                                          // 533
                                                                                                                  // 534
      Twix.prototype._iterateHelper = function(period, iter, hasNext, intervalAmount) {                           // 535
        return {                                                                                                  // 536
          next: function() {                                                                                      // 537
            var val;                                                                                              // 538
            if (!hasNext()) {                                                                                     // 539
              return null;                                                                                        // 540
            } else {                                                                                              // 541
              val = iter.clone();                                                                                 // 542
              iter.add(intervalAmount, period);                                                                   // 543
              return val;                                                                                         // 544
            }                                                                                                     // 545
          },                                                                                                      // 546
          hasNext: hasNext                                                                                        // 547
        };                                                                                                        // 548
      };                                                                                                          // 549
                                                                                                                  // 550
      Twix.prototype._prepIterateInputs = function() {                                                            // 551
        var inputs, intervalAmount, minHours, period, ref, ref1;                                                  // 552
        inputs = 1 <= arguments.length ? slice.call(arguments, 0) : [];                                           // 553
        if (typeof inputs[0] === 'number') {                                                                      // 554
          return inputs;                                                                                          // 555
        }                                                                                                         // 556
        if (typeof inputs[0] === 'string') {                                                                      // 557
          period = inputs.shift();                                                                                // 558
          intervalAmount = (ref = inputs.pop()) != null ? ref : 1;                                                // 559
          if (inputs.length) {                                                                                    // 560
            minHours = (ref1 = inputs[0]) != null ? ref1 : false;                                                 // 561
          }                                                                                                       // 562
        }                                                                                                         // 563
        if (moment.isDuration(inputs[0])) {                                                                       // 564
          period = 'ms';                                                                                          // 565
          intervalAmount = inputs[0].as(period);                                                                  // 566
        }                                                                                                         // 567
        return [intervalAmount, period, minHours];                                                                // 568
      };                                                                                                          // 569
                                                                                                                  // 570
      Twix.prototype._inner = function(period, intervalAmount) {                                                  // 571
        var durationCount, durationPeriod, end, modulus, start;                                                   // 572
        if (period == null) {                                                                                     // 573
          period = 'ms';                                                                                          // 574
        }                                                                                                         // 575
        if (intervalAmount == null) {                                                                             // 576
          intervalAmount = 1;                                                                                     // 577
        }                                                                                                         // 578
        start = this.start();                                                                                     // 579
        end = this._displayEnd.clone();                                                                           // 580
        if (start > start.clone().startOf(period)) {                                                              // 581
          start.startOf(period).add(intervalAmount, period);                                                      // 582
        }                                                                                                         // 583
        if (end < end.clone().endOf(period)) {                                                                    // 584
          end.startOf(period);                                                                                    // 585
        }                                                                                                         // 586
        durationPeriod = start.twix(end).asDuration(period);                                                      // 587
        durationCount = durationPeriod.get(period);                                                               // 588
        modulus = durationCount % intervalAmount;                                                                 // 589
        end.subtract(modulus, period);                                                                            // 590
        return [start, end];                                                                                      // 591
      };                                                                                                          // 592
                                                                                                                  // 593
      Twix.prototype._mutated = function() {                                                                      // 594
        this._start = this.allDay ? this._oStart.clone().startOf('d') : this._oStart;                             // 595
        this._lastMilli = this.allDay ? this._oEnd.clone().endOf('d') : this._oEnd;                               // 596
        this._end = this.allDay ? this._oEnd.clone().startOf('d') : this._oEnd;                                   // 597
        return this._displayEnd = this.allDay ? this._end.clone().add(1, 'd') : this._end;                        // 598
      };                                                                                                          // 599
                                                                                                                  // 600
      return Twix;                                                                                                // 601
                                                                                                                  // 602
    })();                                                                                                         // 603
    Twix._extend(moment.locale(), {                                                                               // 604
      _twix: Twix.defaults                                                                                        // 605
    });                                                                                                           // 606
    Twix.formatTemplate = function(leftSide, rightSide) {                                                         // 607
      return leftSide + " - " + rightSide;                                                                        // 608
    };                                                                                                            // 609
    moment.twix = function() {                                                                                    // 610
      return (function(func, args, ctor) {                                                                        // 611
        ctor.prototype = func.prototype;                                                                          // 612
        var child = new ctor, result = func.apply(child, args);                                                   // 613
        return Object(result) === result ? result : child;                                                        // 614
      })(Twix, arguments, function(){});                                                                          // 615
    };                                                                                                            // 616
    moment.fn.twix = function() {                                                                                 // 617
      return (function(func, args, ctor) {                                                                        // 618
        ctor.prototype = func.prototype;                                                                          // 619
        var child = new ctor, result = func.apply(child, args);                                                   // 620
        return Object(result) === result ? result : child;                                                        // 621
      })(Twix, [this].concat(slice.call(arguments)), function(){});                                               // 622
    };                                                                                                            // 623
    moment.fn.forDuration = function(duration, allDay) {                                                          // 624
      return new Twix(this, this.clone().add(duration), allDay);                                                  // 625
    };                                                                                                            // 626
    if (moment.duration.fn) {                                                                                     // 627
      moment.duration.fn.afterMoment = function(startingTime, allDay) {                                           // 628
        return new Twix(startingTime, moment(startingTime).clone().add(this), allDay);                            // 629
      };                                                                                                          // 630
      moment.duration.fn.beforeMoment = function(startingTime, allDay) {                                          // 631
        return new Twix(moment(startingTime).clone().subtract(this), startingTime, allDay);                       // 632
      };                                                                                                          // 633
    }                                                                                                             // 634
    moment.twixClass = Twix;                                                                                      // 635
    return Twix;                                                                                                  // 636
  };                                                                                                              // 637
                                                                                                                  // 638
  if (hasModule) {                                                                                                // 639
    return module.exports = makeTwix(require('moment'));                                                          // 640
  }                                                                                                               // 641
                                                                                                                  // 642
  if (typeof define === 'function') {                                                                             // 643
    define('twix', ['moment'], function(moment) {                                                                 // 644
      return makeTwix(moment);                                                                                    // 645
    });                                                                                                           // 646
  }                                                                                                               // 647
                                                                                                                  // 648
  if (this.moment) {                                                                                              // 649
    this.Twix = makeTwix(this.moment);                                                                            // 650
  } else if (typeof moment !== "undefined" && moment !== null) {                                                  // 651
    this.Twix = makeTwix(moment);                                                                                 // 652
  }                                                                                                               // 653
                                                                                                                  // 654
}).call(this);                                                                                                    // 655
                                                                                                                  // 656
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}).call(this);


/* Exports */
if (typeof Package === 'undefined') Package = {};
Package['momentjs:twix'] = {};

})();
