{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/appointmentEdit.js"],"names":[],"mappings":"yfile":"/client/views/CabBooking/appointmentEdit.js","sourcesContent":["function dayDelta(date) {\n\tvar diff = moment(date).diff(moment().startOf('day'), \"days\");\n\tif (diff===1){\n\t\treturn \" tomorrow\";\n\t}\n\telse if (diff===-1) {\n\t\treturn \" yesterday\";\n\t}\n\telse if (diff === 0)\n\t{\n\t\treturn \" today\"\n\t}\n\telse if (diff > 1)\n\t{\n\t\treturn \" in \" +Math.abs(diff)+ \" days\"\n\t}\n\telse\n\t{\n\t\treturn \" \"+Math.abs(diff)+\" days ago\"\n\t}\n}\nTemplate.insertAppointmentForm.events({\n\t'click #closeBookingEditor': function() {\n\t\t$('td.rowContent.bg-success').removeClass('bg-success');\n\t\tgoHome();\n\t},\n\t'click #deleteAppointment': function() {\n\t\tif (confirm(\"Are you sure you want to delete this appointment?\")) {\n\t\t\tappointmentList.remove(Session.get(\"currentlyEditingDoc\"));\n\t\t\tgoHome();\n\t\t}\n\t}\n\n});\nTemplate.insertAppointmentForm.rendered = function() {\n\tconsole.log(\"appointment edit rendered\");\n\t//$('input[name=\"date\"]').change(function() {\n\t//\tif (Router.current().route.getName() === \"newAppointment\" ||\n\t//\t\tRouter.current().route.getName() === \"bookingTable\") {\n\t//\t\tnewAppointment($('input[name=\"date\"]').val());\n\t//\t}\n\t//});\n\t$('#datetimepicker').on(\"dp.change\", function (e) {\n\t\tif (Router.current().route.getName() === \"newAppointment\" ||\n\t\t\tRouter.current().route.getName() === \"bookingTable\") {\n\t\t\tnewAppointment(e.date.format(\"h:mm A\"));\n\t\t}\n\t});\n};\nTemplate.insertAppointmentForm.helpers({\n\tappointmentList: appointmentList,\n\ttitle: function(){\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\treturn \"Add New Appointment\"\n\t\t} else {\n\t\t\treturn \"Editing Appointment\";\n\t\t}\n\t\t\n\t},\n\tsubtitle: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tvar momentobj = moment(Session.get(\"date\"));\n\t\t\tvar ret = momentobj.format(\"dddd, MMMM Do GGGG\");\n\t\t\treturn \"New Appointment for \" + ret + \" -\"+ dayDelta(Session.get(\"date\"));\n\t\t} else {}\n\t},\n\tsavebuttontext: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\treturn \"Create New Appointment\"\n\t\t} else {\n\t\t\treturn \"Update Appointment\"\n\t\t}\n\t},\n\tsessionDate: function(){return Session.get(\"date\")},\n\tlength: function() {\n\t\tvar lol = Session.get(\"newTime\");\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\t\ttry {return provObject.appointmentLength}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.log(\"looking for appointment length too early.\");\n\t\t\t\treturn 15;\n\t\t\t}//this error doesn't matter, it means the unusualDays\n\t\t\t// and Providers collections aren't filled yet.\n\t\t\t//will be fixed for real when iron router is used for appointment editing\n\t\t\t///creation\n\t\t} else {//update, grab length from current doc\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).length;\n\t\t}\n\t},\n\tcurrentType: function() {\n\t\tif(Session.get(\"formForInsert\")) {\n\t\t\treturn \"insert\"\n\t\t}\n\t\telse {\n\t\t\treturn \"update\"\n\t\t}\n\t},\n\ttimePreset: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tif (Session.get('newTime') && typeof Session.get('newTime') !== \"undefined\") {\n\t\t\t\treturn Session.get(\"newTime\");\n\t\t\t} else {\n\t\t\t\treturn \"12:00 PM\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).date;\n\t\t}\n\t},\n\tcurrentDoc: function() {return appointmentList.findOne(Session.get(\"currentlyEditingDoc\"))},\n\tdeleteButtonClass: function() {if (Session.get(\"formForInsert\")) {\n\t\treturn \"hidden\";\n\t}}\n\n});\nAutoForm.hooks({\n\tinsertAppointmentFormInner: {\n\t\tbeginSubmit: function(fieldId, template) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tthealert[0].innerHTML = \"Submitting...\";\n\t\t\tthealert.show(\"fast\");\n\t\t\tthealert.attr(\"disabled\", true);\n\t\t},\n\n\t\tonSuccess: function(formType, result) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tif(formType === \"update\") {\n\t\t\t\tthealert[0].innerHTML = \"Appointment Successfully Edited.\";\n\t\t\t} else {\n\t\t\t\tthealert[0].innerHTML = \"New Appointment Created.\";\n\t\t\t}\n\t\t\t//thealert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\t//thealert.addClass('alert-success');\n\t\t\t//thealert.removeClass('bg-success');\n\t\t\t//this.resetForm();\n\t\t\t//closeTimeout = Meteor.setTimeout(function() {\n\t\t\t//\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\tSession.set(\"changedAppointmentID\", result);\n\t\t\tgoHome();\n\t\t\t//}, 3000);\n\t\t},\n\t\t//docToForm: function(doc){\n\t\t//\tconsole.log('running docToForm on route: '+Router.current().route.getName());\n\t\t//\tif (doc.date instanceof Date) {\n\t\t//\t\tdoc.time = moment(doc.date).format(\"h:mm A\");\n\t\t//\t}\n\t\t//\treturn doc;\n\t\t//},\n\t\tformToDoc: function(doc) {\n\t\t\tdoc.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tformToModifier: function(doc) {\n\t\t\tdoc.$set.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tonError: function(formtype, error) {\n\t\t\t//console.log('running onError!');\n\t\t\t$('#saveAppointChanges').attr(\"disabled\", false);\n\t\t\tvar alert = $('#insertSuccessAlert');\n\t\t\talert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\talert.addClass('alert-danger');\n\t\t\talert[0].innerHTML = \"Error!\";\n\t\t\talert.show(\"fast\");\n\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\t}, 3000);\n\t\t},\n\t\tafter: {\n\t\t\tinsert: function(error, result) {//TODO: When appointment is made, use the data-id var\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Insert Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Insert Result:\", result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: function(error, result) {\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"update Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"update Result:\", result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});"]}