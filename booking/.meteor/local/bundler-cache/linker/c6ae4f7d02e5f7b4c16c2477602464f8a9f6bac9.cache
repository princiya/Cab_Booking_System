[{"type":"js","data":"/* Imports for global scope */\n\nAutoForm = Package['aldeed:autoform'].AutoForm;\nCollection2 = Package['aldeed:collection2'].Collection2;\nKadira = Package['meteorhacks:kadira'].Kadira;\nRoles = Package['alanning:roles'].Roles;\n_ = Package.underscore._;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nSubsManager = Package['meteorhacks:subs-manager'].SubsManager;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nmoment = Package['mrt:moment'].moment;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nReload = Package.reload.Reload;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nIron = Package['iron:core'].Iron;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nTemplate = Package.templating.Template;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.__checkName(\"appointmentEdit\");\nTemplate[\"appointmentEdit\"] = new Template(\"Template.appointmentEdit\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"appointmentEdit\"\n  }, \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"insertAppointmentForm\")), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"insertAppointmentForm\");\nTemplate[\"insertAppointmentForm\"] = new Template(\"Template.insertAppointmentForm\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(view.lookup(\"appointmentList\")),\n      doc: Spacebars.call(view.lookup(\"currentDoc\")),\n      id: Spacebars.call(\"insertAppointmentFormInner\"),\n      type: Spacebars.call(view.lookup(\"currentType\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\", HTML.H4({\n        \"class\": \"title\"\n      }, \"Cab Booking System\"), \"\\n\t\", HTML.DIV({\n        \"class\": \"alert \",\n        style: \"display:none;\",\n        id: \"insertSuccessAlert\",\n        role: \"alert\"\n      }), \"\\n\t\", HTML.FIELDSET(\"\\n\t\t\", HTML.H6(\"Book your cab here!!\"), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"firstname\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"lastname\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"date\"),\n          type: Spacebars.call(\"timePicker\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"phone\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"notes\"),\n          rows: Spacebars.call(2)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"length\"),\n          \"default\": Spacebars.call(15),\n          step: Spacebars.call(5)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\"), \"\\n\t\", HTML.DIV({\n        \"class\": \"footer\",\n        style: \"height:50px;\"\n      }, \"\\n\t\t\", HTML.BUTTON({\n        type: \"button\",\n        \"class\": \"btn btn-default pull-left\",\n        id: \"closeBookingEditor\"\n      }, \"Close\"), \"\\n\t\t\", HTML.BUTTON({\n        type: \"button\",\n        \"class\": function() {\n          return [ \"btn btn-danger pull-left \", Spacebars.mustache(view.lookup(\"deleteButtonClass\")) ];\n        },\n        id: \"deleteAppointment\"\n      }, \"Delete\"), \"\\n\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary pull-right\",\n        id: \"saveAppointChanges\"\n      }, Blaze.View(\"lookup:savebuttontext\", function() {\n        return Spacebars.mustache(view.lookup(\"savebuttontext\"));\n      })), \"\\n\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n\n}).call(this);\n","servePath":"/client/views/CabBooking/template.appointmentEdit.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/template.appointmentEdit.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/CabBooking/template.appointmentEdit.js","sourcesContent":["\nTemplate.__checkName(\"appointmentEdit\");\nTemplate[\"appointmentEdit\"] = new Template(\"Template.appointmentEdit\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"appointmentEdit\"\n  }, \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"insertAppointmentForm\")), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"insertAppointmentForm\");\nTemplate[\"insertAppointmentForm\"] = new Template(\"Template.insertAppointmentForm\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(view.lookup(\"appointmentList\")),\n      doc: Spacebars.call(view.lookup(\"currentDoc\")),\n      id: Spacebars.call(\"insertAppointmentFormInner\"),\n      type: Spacebars.call(view.lookup(\"currentType\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\", HTML.H4({\n        \"class\": \"title\"\n      }, \"Cab Booking System\"), \"\\n\t\", HTML.DIV({\n        \"class\": \"alert \",\n        style: \"display:none;\",\n        id: \"insertSuccessAlert\",\n        role: \"alert\"\n      }), \"\\n\t\", HTML.FIELDSET(\"\\n\t\t\", HTML.H6(\"Book your cab here!!\"), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"firstname\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"lastname\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"date\"),\n          type: Spacebars.call(\"timePicker\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"phone\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"notes\"),\n          rows: Spacebars.call(2)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"length\"),\n          \"default\": Spacebars.call(15),\n          step: Spacebars.call(5)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\"), \"\\n\t\", HTML.DIV({\n        \"class\": \"footer\",\n        style: \"height:50px;\"\n      }, \"\\n\t\t\", HTML.BUTTON({\n        type: \"button\",\n        \"class\": \"btn btn-default pull-left\",\n        id: \"closeBookingEditor\"\n      }, \"Close\"), \"\\n\t\t\", HTML.BUTTON({\n        type: \"button\",\n        \"class\": function() {\n          return [ \"btn btn-danger pull-left \", Spacebars.mustache(view.lookup(\"deleteButtonClass\")) ];\n        },\n        id: \"deleteAppointment\"\n      }, \"Delete\"), \"\\n\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary pull-right\",\n        id: \"saveAppointChanges\"\n      }, Blaze.View(\"lookup:savebuttontext\", function() {\n        return Spacebars.mustache(view.lookup(\"savebuttontext\"));\n      })), \"\\n\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"appointmentItem\");\nTemplate[\"appointmentItem\"] = new Template(\"Template.appointmentItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"tableItem appointmentItem bg-primary \", Spacebars.mustache(view.lookup(\"itemHighlightClass\")) ];\n    },\n    \"data-id\": function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    },\n    style: function() {\n      return Spacebars.mustache(view.lookup(\"appointmentStyle\"));\n    }\n  }, HTML.Raw('\\n\t\t<h5 class=\"tableItemData\"><span class=\"glyphicon glyphicon-user\"></span>\\n\t\t\tBooked!!</h5>\\n\t\t\\n\t\\n\t\t\\n\t'));\n}));\n\n}).call(this);\n","servePath":"/client/views/CabBooking/template.appointmentItem.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/template.appointmentItem.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/CabBooking/template.appointmentItem.js","sourcesContent":["\nTemplate.__checkName(\"appointmentItem\");\nTemplate[\"appointmentItem\"] = new Template(\"Template.appointmentItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"tableItem appointmentItem bg-primary \", Spacebars.mustache(view.lookup(\"itemHighlightClass\")) ];\n    },\n    \"data-id\": function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    },\n    style: function() {\n      return Spacebars.mustache(view.lookup(\"appointmentStyle\"));\n    }\n  }, HTML.Raw('\\n\t\t<h5 class=\"tableItemData\"><span class=\"glyphicon glyphicon-user\"></span>\\n\t\t\tBooked!!</h5>\\n\t\t\\n\t\\n\t\t\\n\t'));\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"bookingTable\");\nTemplate[\"bookingTable\"] = new Template(\"Template.bookingTable\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"bookingTable\"\n  }, HTML.Raw('\\n\t\t<!-- <div class=\"row\">\\n\t\t\t<div class=\"\" -->\\n\t\t'), HTML.H2({\n    \"class\": \"dayDisplay pull-left\"\n  }, Blaze.View(\"lookup:day\", function() {\n    return Spacebars.mustache(view.lookup(\"day\"));\n  })), \"\\n\t\t\", HTML.H2({\n    \"class\": \"pull-right\"\n  }, Blaze.View(\"lookup:notes\", function() {\n    return Spacebars.mustache(view.lookup(\"notes\"));\n  })), HTML.Raw(\"\\n\t\t<!-- </div> -->\\n\t\t\"), HTML.UL({\n    \"class\": \"nav nav-tabs\",\n    role: \"tablist\"\n  }, \"\\n           \\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"providerNames\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.LI({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"selected\"));\n      }\n    }, HTML.A({\n      \"data-name\": function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      },\n      \"class\": \"providerTab\",\n      href: \"#\"\n    }, \"Cab Booking Details\\n\t\t\t\t\t\")), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV(HTML.Attrs({\n    id: \"bookingTableWrapper\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"bookingTableWrapperStyle\"));\n  }), \"\\n\t\t\t\", HTML.TABLE({\n    \"class\": \"table\"\n  }, \"\\n\t\t\t\t\", HTML.THEAD(\"\\n\t\t\t\t\t\", HTML.TR(\"\\n\t\t\t\t\t\t\", HTML.TH(\"\\n\t\t\t\t\t\t\tTime\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\", HTML.TH(\"\\n\t\t\t\t\t\t\tBooking Status\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.TBODY(\"\\n\t\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"times\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"timeRow\")), \"\\n\t\t\t\t\t\" ];\n  }), \"\\n\\n                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"blockouts\"));\n  }, function() {\n    return [ \"\\n                        \", Spacebars.include(view.lookupTemplate(\"blockoutItem\")), \"\\n                    \" ];\n  }), \"\\n                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"appointments\"));\n  }, function() {\n    return [ \"\\n                        \", Spacebars.include(view.lookupTemplate(\"appointmentItem\")), \"\\n                    \" ];\n  }), \"\\n\\n\t\t\t\t\"), \"\\n\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notPrintout\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"pull-right\",\n      id: \"customTimeChanger\"\n    }, \"\\n\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      style: function() {\n        return Spacebars.mustache(view.lookup(\"buttonStyle\"));\n      },\n      id: \"customTimesButton\",\n      \"class\": \"btn\"\n    }, \"Set Custom Times\"), \"\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"unusualDays\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          collection: Spacebars.call(\"unusualDays\"),\n          id: Spacebars.call(\"changeDayTimes\"),\n          doc: Spacebars.call(view.lookup(\"todaysUnusualTimes\")),\n          type: Spacebars.call(\"update\"),\n          autosave: Spacebars.call(true),\n          \"class\": Spacebars.call(\"form-inline\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n          return [ \"\\n\t\t\t\t\t\", HTML.DIV({\n            \"class\": \"form-group\"\n          }, \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"startTime\"),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"endTime\"),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"appointmentLength\"),\n              step: Spacebars.call(5),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\\n\t\t\t\t\t\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\" ];\n        });\n      }), \"\\n\t\t\t\" ];\n    }), \"\\n\t\t\"), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"timeRow\");\nTemplate[\"timeRow\"] = new Template(\"Template.timeRow\", (function() {\n  var view = this;\n  return HTML.TR({\n    \"class\": function() {\n      return [ \"timeRow \", Spacebars.mustache(view.lookup(\"rowHighlightClass\")) ];\n    }\n  }, \"\\n\t\t\", HTML.TD({\n    \"class\": \"rowHeader\"\n  }, Blaze.View(\"lookup:time\", function() {\n    return Spacebars.mustache(view.lookup(\"time\"));\n  })), \"\\n\t\t\", HTML.TD({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"rowTimeId\"));\n    },\n    \"class\": \"rowContent\"\n  }), \"\\n\t\");\n}));\n\n}).call(this);\n","servePath":"/client/views/CabBooking/template.bookingTable.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/template.bookingTable.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/CabBooking/template.bookingTable.js","sourcesContent":["\nTemplate.__checkName(\"bookingTable\");\nTemplate[\"bookingTable\"] = new Template(\"Template.bookingTable\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"bookingTable\"\n  }, HTML.Raw('\\n\t\t<!-- <div class=\"row\">\\n\t\t\t<div class=\"\" -->\\n\t\t'), HTML.H2({\n    \"class\": \"dayDisplay pull-left\"\n  }, Blaze.View(\"lookup:day\", function() {\n    return Spacebars.mustache(view.lookup(\"day\"));\n  })), \"\\n\t\t\", HTML.H2({\n    \"class\": \"pull-right\"\n  }, Blaze.View(\"lookup:notes\", function() {\n    return Spacebars.mustache(view.lookup(\"notes\"));\n  })), HTML.Raw(\"\\n\t\t<!-- </div> -->\\n\t\t\"), HTML.UL({\n    \"class\": \"nav nav-tabs\",\n    role: \"tablist\"\n  }, \"\\n           \\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"providerNames\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.LI({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"selected\"));\n      }\n    }, HTML.A({\n      \"data-name\": function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      },\n      \"class\": \"providerTab\",\n      href: \"#\"\n    }, \"Cab Booking Details\\n\t\t\t\t\t\")), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV(HTML.Attrs({\n    id: \"bookingTableWrapper\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"bookingTableWrapperStyle\"));\n  }), \"\\n\t\t\t\", HTML.TABLE({\n    \"class\": \"table\"\n  }, \"\\n\t\t\t\t\", HTML.THEAD(\"\\n\t\t\t\t\t\", HTML.TR(\"\\n\t\t\t\t\t\t\", HTML.TH(\"\\n\t\t\t\t\t\t\tTime\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\", HTML.TH(\"\\n\t\t\t\t\t\t\tBooking Status\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.TBODY(\"\\n\t\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"times\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"timeRow\")), \"\\n\t\t\t\t\t\" ];\n  }), \"\\n\\n                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"blockouts\"));\n  }, function() {\n    return [ \"\\n                        \", Spacebars.include(view.lookupTemplate(\"blockoutItem\")), \"\\n                    \" ];\n  }), \"\\n                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"appointments\"));\n  }, function() {\n    return [ \"\\n                        \", Spacebars.include(view.lookupTemplate(\"appointmentItem\")), \"\\n                    \" ];\n  }), \"\\n\\n\t\t\t\t\"), \"\\n\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notPrintout\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"pull-right\",\n      id: \"customTimeChanger\"\n    }, \"\\n\t\t\t\", HTML.BUTTON({\n      type: \"button\",\n      style: function() {\n        return Spacebars.mustache(view.lookup(\"buttonStyle\"));\n      },\n      id: \"customTimesButton\",\n      \"class\": \"btn\"\n    }, \"Set Custom Times\"), \"\\n\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"unusualDays\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          collection: Spacebars.call(\"unusualDays\"),\n          id: Spacebars.call(\"changeDayTimes\"),\n          doc: Spacebars.call(view.lookup(\"todaysUnusualTimes\")),\n          type: Spacebars.call(\"update\"),\n          autosave: Spacebars.call(true),\n          \"class\": Spacebars.call(\"form-inline\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n          return [ \"\\n\t\t\t\t\t\", HTML.DIV({\n            \"class\": \"form-group\"\n          }, \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"startTime\"),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"endTime\"),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"appointmentLength\"),\n              step: Spacebars.call(5),\n              style: Spacebars.call(\"width: 75px\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n          }), \"\\n\t\t\t\t\t\\n\t\t\t\t\t\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\" ];\n        });\n      }), \"\\n\t\t\t\" ];\n    }), \"\\n\t\t\"), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"timeRow\");\nTemplate[\"timeRow\"] = new Template(\"Template.timeRow\", (function() {\n  var view = this;\n  return HTML.TR({\n    \"class\": function() {\n      return [ \"timeRow \", Spacebars.mustache(view.lookup(\"rowHighlightClass\")) ];\n    }\n  }, \"\\n\t\t\", HTML.TD({\n    \"class\": \"rowHeader\"\n  }, Blaze.View(\"lookup:time\", function() {\n    return Spacebars.mustache(view.lookup(\"time\"));\n  })), \"\\n\t\t\", HTML.TD({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"rowTimeId\"));\n    },\n    \"class\": \"rowContent\"\n  }), \"\\n\t\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"sideEditMasterTemplate\");\nTemplate[\"sideEditMasterTemplate\"] = new Template(\"Template.sideEditMasterTemplate\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"navbar\")), \"\\n\t\t\", HTML.DIV({\n    id: \"main\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\",\n    id: \"editorWrapper\"\n  }, \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-8\"\n  }, \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n    return \"right\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n\n}).call(this);\n","servePath":"/client/views/CabBooking/template.sideEditWrapper.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/template.sideEditWrapper.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/CabBooking/template.sideEditWrapper.js","sourcesContent":["\nTemplate.__checkName(\"sideEditMasterTemplate\");\nTemplate[\"sideEditMasterTemplate\"] = new Template(\"Template.sideEditMasterTemplate\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"navbar\")), \"\\n\t\t\", HTML.DIV({\n    id: \"main\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\",\n    id: \"editorWrapper\"\n  }, \"\\n\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-8\"\n  }, \"\\n\t\t\t\t\t\", Blaze._TemplateWith(function() {\n    return \"right\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"calendar\");\nTemplate[\"calendar\"] = new Template(\"Template.calendar\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    id: \"calendarHeader\"\n  }, \"\\n        \", HTML.DIV({\n    role: \"presentation\",\n    id: \"prevMonth\"\n  }, \"\\n            \", HTML.BUTTON({\n    \"class\": \"btn btn-default btn-primary\",\n    role: \"button\"\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-arrow-left\"></span>'), \" \", Blaze.View(\"lookup:prevmonth\", function() {\n    return Spacebars.mustache(view.lookup(\"prevmonth\"));\n  })), \"\\n        \"), \"\\n        \", HTML.DIV({\n    role: \"presentation\"\n  }, \"\\n            \", HTML.DIV({\n    id: \"centre\"\n  }, \"\\n                \", HTML.H2({\n    id: \"month\",\n    \"class\": \"\"\n  }, Blaze.View(\"lookup:dateString\", function() {\n    return Spacebars.mustache(view.lookup(\"dateString\"));\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    role: \"presentation\",\n    id: \"nextMonth\"\n  }, \"\\n            \", HTML.BUTTON({\n    \"class\": \"btn btn-default btn-primary\",\n    role: \"button\"\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-arrow-right\"></span>'), \" \", Blaze.View(\"lookup:nextmonth\", function() {\n    return Spacebars.mustache(view.lookup(\"nextmonth\"));\n  })), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"thecalendar\"\n  }, \"\\n        \", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"innercalendar\"),\n      timezone: Spacebars.call(\"Pacific/Auckland\"),\n      header: Spacebars.call(false)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fullcalendar\"));\n  }), \"\\n    \") ];\n}));\n\n}).call(this);\n","servePath":"/client/views/calendarview/template.calendar.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/calendarview/template.calendar.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/calendarview/template.calendar.js","sourcesContent":["\nTemplate.__checkName(\"calendar\");\nTemplate[\"calendar\"] = new Template(\"Template.calendar\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    id: \"calendarHeader\"\n  }, \"\\n        \", HTML.DIV({\n    role: \"presentation\",\n    id: \"prevMonth\"\n  }, \"\\n            \", HTML.BUTTON({\n    \"class\": \"btn btn-default btn-primary\",\n    role: \"button\"\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-arrow-left\"></span>'), \" \", Blaze.View(\"lookup:prevmonth\", function() {\n    return Spacebars.mustache(view.lookup(\"prevmonth\"));\n  })), \"\\n        \"), \"\\n        \", HTML.DIV({\n    role: \"presentation\"\n  }, \"\\n            \", HTML.DIV({\n    id: \"centre\"\n  }, \"\\n                \", HTML.H2({\n    id: \"month\",\n    \"class\": \"\"\n  }, Blaze.View(\"lookup:dateString\", function() {\n    return Spacebars.mustache(view.lookup(\"dateString\"));\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    role: \"presentation\",\n    id: \"nextMonth\"\n  }, \"\\n            \", HTML.BUTTON({\n    \"class\": \"btn btn-default btn-primary\",\n    role: \"button\"\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-arrow-right\"></span>'), \" \", Blaze.View(\"lookup:nextmonth\", function() {\n    return Spacebars.mustache(view.lookup(\"nextmonth\"));\n  })), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"thecalendar\"\n  }, \"\\n        \", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"innercalendar\"),\n      timezone: Spacebars.call(\"Pacific/Auckland\"),\n      header: Spacebars.call(false)\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fullcalendar\"));\n  }), \"\\n    \") ];\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"providerEdit\");\nTemplate[\"providerEdit\"] = new Template(\"Template.providerEdit\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"providers\"),\n      doc: Spacebars.call(view.lookup(\"editingProvider\")),\n      id: Spacebars.call(\"updateProviderForm\"),\n      type: Spacebars.call(\"update\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\t\", HTML.FIELDSET(\"\\n\t\t\t\", HTML.Comment(\" <h6>New appointment for {{currentDate}}</h6> \"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"name\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"startTime\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"endTime\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"appointmentLength\"),\n          step: Spacebars.call(5)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"blockouts\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\",\n        id: \"saveAppointChanges\"\n      }, \"Save changes\"), \"\\n\t\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n\n}).call(this);\n","servePath":"/client/views/providers/template.providerEdit.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/providers/template.providerEdit.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/providers/template.providerEdit.js","sourcesContent":["\nTemplate.__checkName(\"providerEdit\");\nTemplate[\"providerEdit\"] = new Template(\"Template.providerEdit\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"providers\"),\n      doc: Spacebars.call(view.lookup(\"editingProvider\")),\n      id: Spacebars.call(\"updateProviderForm\"),\n      type: Spacebars.call(\"update\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\t\", HTML.FIELDSET(\"\\n\t\t\t\", HTML.Comment(\" <h6>New appointment for {{currentDate}}</h6> \"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"name\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"startTime\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"endTime\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"appointmentLength\"),\n          step: Spacebars.call(5)\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"blockouts\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\",\n        id: \"saveAppointChanges\"\n      }, \"Save changes\"), \"\\n\t\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"providerList\");\nTemplate[\"providerList\"] = new Template(\"Template.providerList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"list-group\"\n  }, \"\\n\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"providerList\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.A({\n      href: \"#\",\n      \"data-name\": function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      },\n      \"class\": \"list-group-item providerName\"\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"providerDeleteButton btn btn-danger pull-right\"\n    }, \"\\n\t\t\t\t\t\tDelete\")), \"\\n\t\t\t\t\" ];\n  }), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.Raw('<button id=\"newProviderButton\" class=\"btn btn-primary\">New Provider</button>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-8\"\n  }, Spacebars.include(view.lookupTemplate(\"providerEdit\"))), \"\\n\t\");\n}));\n\n}).call(this);\n","servePath":"/client/views/providers/template.providerList.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/providers/template.providerList.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/providers/template.providerList.js","sourcesContent":["\nTemplate.__checkName(\"providerList\");\nTemplate[\"providerList\"] = new Template(\"Template.providerList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\"\n  }, \"\\n\t\t\t\", HTML.DIV({\n    \"class\": \"list-group\"\n  }, \"\\n\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"providerList\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.A({\n      href: \"#\",\n      \"data-name\": function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      },\n      \"class\": \"list-group-item providerName\"\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n\t\t\t\t\t\", HTML.BUTTON({\n      \"class\": \"providerDeleteButton btn btn-danger pull-right\"\n    }, \"\\n\t\t\t\t\t\tDelete\")), \"\\n\t\t\t\t\" ];\n  }), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.Raw('<button id=\"newProviderButton\" class=\"btn btn-primary\">New Provider</button>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.DIV({\n    \"class\": \"col-md-8\"\n  }, Spacebars.include(view.lookupTemplate(\"providerEdit\"))), \"\\n\t\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"loginPage\");\nTemplate[\"loginPage\"] = new Template(\"Template.loginPage\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"loginForm\",\n    \"class\": \"container\"\n  }, \" \\n\t\", HTML.P(\"\\n\t\", Spacebars.include(view.lookupTemplate(\"atForm\")), \" \\n\t\"), \"\\n\t\");\n}));\n\n}).call(this);\n","servePath":"/client/views/users/template.login.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/users/template.login.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/users/template.login.js","sourcesContent":["\nTemplate.__checkName(\"loginPage\");\nTemplate[\"loginPage\"] = new Template(\"Template.loginPage\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"loginForm\",\n    \"class\": \"container\"\n  }, \" \\n\t\", HTML.P(\"\\n\t\", Spacebars.include(view.lookupTemplate(\"atForm\")), \" \\n\t\"), \"\\n\t\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"registration\");\nTemplate[\"registration\"] = new Template(\"Template.registration\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Meteor.users\"),\n      id: Spacebars.call(\"registrationForm\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\", HTML.FIELDSET(\"\\n\t\t\t\", HTML.LEGEND(\"Register a new user\"), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"username\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"emails\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\"),\n          type: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"roles\"),\n          options: Spacebars.call(\"auto\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\",\n        id: \"createUser\"\n      }, \"Register\"), \"\\n\t\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n\n}).call(this);\n","servePath":"/client/views/users/template.registration.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/users/template.registration.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/users/template.registration.js","sourcesContent":["\nTemplate.__checkName(\"registration\");\nTemplate[\"registration\"] = new Template(\"Template.registration\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Meteor.users\"),\n      id: Spacebars.call(\"registrationForm\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\", HTML.FIELDSET(\"\\n\t\t\t\", HTML.LEGEND(\"Register a new user\"), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"username\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"emails\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\"),\n          type: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"roles\"),\n          options: Spacebars.call(\"auto\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\",\n        id: \"createUser\"\n      }, \"Register\"), \"\\n\t\t\"), \"\\n\t\" ];\n    });\n  });\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"datepicker\");\nTemplate[\"datepicker\"] = new Template(\"Template.datepicker\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"form-group\">\\n        <button type=\"button\" id=\"prevDay\" class=\"btn btn-default glyphicon glyphicon-chevron-left\"></button>\\n        <div class=\"input-group date\" id=\"datetimepicker1\">\\n            <input type=\"text\" id=\"dateField\" class=\"form-control\">\\n        </div>\\n        <button type=\"button\" id=\"nextDay\" class=\"btn btn-default glyphicon glyphicon-chevron-right\"></button>\\n    </div>');\n}));\n\n}).call(this);\n","servePath":"/client/views/template.datepicker.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/template.datepicker.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/template.datepicker.js","sourcesContent":["\nTemplate.__checkName(\"datepicker\");\nTemplate[\"datepicker\"] = new Template(\"Template.datepicker\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"form-group\">\\n        <button type=\"button\" id=\"prevDay\" class=\"btn btn-default glyphicon glyphicon-chevron-left\"></button>\\n        <div class=\"input-group date\" id=\"datetimepicker1\">\\n            <input type=\"text\" id=\"dateField\" class=\"form-control\">\\n        </div>\\n        <button type=\"button\" id=\"nextDay\" class=\"btn btn-default glyphicon glyphicon-chevron-right\"></button>\\n    </div>');\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"loading\");\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Loading.</h1>\");\n}));\n\n}).call(this);\n","servePath":"/client/views/template.loadingView.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/template.loadingView.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/template.loadingView.js","sourcesContent":["\nTemplate.__checkName(\"loading\");\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Loading.</h1>\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h3>404 not found.</h3>\");\n}));\n\n}).call(this);\n","servePath":"/client/views/template.notFound.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/template.notFound.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/template.notFound.js","sourcesContent":["\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h3>404 not found.</h3>\");\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.__checkName(\"afInputTimePicker\");\nTemplate[\"afInputTimePicker\"] = new Template(\"Template.afInputTimePicker\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"input-group date\",\n    id: \"datetimepicker\"\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    \"class\": \"form-control aftimecontrol\"\n  }, function() {\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));\n  })), HTML.Raw('\\n      <span class=\"input-group-addon\">\\n          <span class=\"glyphicon glyphicon-time\">\\n          </span>\\n      </span>\\n    '));\n}));\n\n}).call(this);\n","servePath":"/client/views/template.timepicker.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/template.timepicker.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/template.timepicker.js","sourcesContent":["\nTemplate.__checkName(\"afInputTimePicker\");\nTemplate[\"afInputTimePicker\"] = new Template(\"Template.afInputTimePicker\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"input-group date\",\n    id: \"datetimepicker\"\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    \"class\": \"form-control aftimecontrol\"\n  }, function() {\n    return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));\n  })), HTML.Raw('\\n      <span class=\"input-group-addon\">\\n          <span class=\"glyphicon glyphicon-time\">\\n          </span>\\n      </span>\\n    '));\n}));\n"]}},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return \"\";\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"singlePageMasterLayout\");\nTemplate[\"singlePageMasterLayout\"] = new Template(\"Template.singlePageMasterLayout\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"navbar\")), \"\\n        \", HTML.DIV({\n    id: \"main\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"navbar\");\nTemplate[\"navbar\"] = new Template(\"Template.navbar\", (function() {\n  var view = this;\n  return HTML.NAV({\n    \"class\": \"navbar navbar-default\",\n    role: \"navigation\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"navbar-header\"\n  }, \"\\n            \", HTML.Raw('<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>'), \"\\n            \", HTML.A({\n    \"class\": \"navbar-brand\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"bookingTable\", Spacebars.kw({\n        date: view.lookup(\"homeLinkDate\"),\n        providerName: view.lookup(\"homeLinkProv\")\n      }));\n    }\n  }, \" Cab Booking\"), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"loggedIn\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"collapse navbar-collapse\",\n      id: \"bs-example-navbar-collapse-1\"\n    }, \"\\n            \", HTML.UL({\n      \"class\": \"nav navbar-nav\"\n    }, \"\\n                \", HTML.LI(HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"calendar\", Spacebars.kw({\n          month: view.lookup(\"calendarMonth\"),\n          year: view.lookup(\"calendarYear\")\n        }));\n      }\n    }, \"Calendar\")), \"\\n                \\n                \\n            \"), \"\\n            \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"isCalendar\"));\n    }, function() {\n      return [ \"\\n                \", HTML.FORM({\n        \"class\": \"navbar-form navbar-left\"\n      }, \"\\n                    \", Spacebars.include(view.lookupTemplate(\"datepicker\")), \"\\n                \"), \"\\n            \" ];\n    }), \"\\n            \", HTML.FORM({\n      \"class\": \"navbar-form navbar-right\"\n    }, \"\\n                \\n                \", HTML.BUTTON({\n      type: \"button\",\n      id: \"newAppointButton\",\n      \"class\": \"btn btn-primary\"\n    }, \"Book A Cab\"), \"\\n             \", HTML.BUTTON({\n      type: \"button\",\n      id: \"signOutButton\",\n      \"class\": \"btn\"\n    }, \"Sign Out\"), \"\\n            \"), \"\\n\\n           \\n        \"), \"\\n        \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n}).call(this);\n","servePath":"/client/template.booking.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/template.booking.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/template.booking.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return \"\";\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"singlePageMasterLayout\");\nTemplate[\"singlePageMasterLayout\"] = new Template(\"Template.singlePageMasterLayout\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"navbar\")), \"\\n        \", HTML.DIV({\n    id: \"main\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"navbar\");\nTemplate[\"navbar\"] = new Template(\"Template.navbar\", (function() {\n  var view = this;\n  return HTML.NAV({\n    \"class\": \"navbar navbar-default\",\n    role: \"navigation\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"navbar-header\"\n  }, \"\\n            \", HTML.Raw('<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>'), \"\\n            \", HTML.A({\n    \"class\": \"navbar-brand\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"bookingTable\", Spacebars.kw({\n        date: view.lookup(\"homeLinkDate\"),\n        providerName: view.lookup(\"homeLinkProv\")\n      }));\n    }\n  }, \" Cab Booking\"), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"loggedIn\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"collapse navbar-collapse\",\n      id: \"bs-example-navbar-collapse-1\"\n    }, \"\\n            \", HTML.UL({\n      \"class\": \"nav navbar-nav\"\n    }, \"\\n                \", HTML.LI(HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"calendar\", Spacebars.kw({\n          month: view.lookup(\"calendarMonth\"),\n          year: view.lookup(\"calendarYear\")\n        }));\n      }\n    }, \"Calendar\")), \"\\n                \\n                \\n            \"), \"\\n            \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"isCalendar\"));\n    }, function() {\n      return [ \"\\n                \", HTML.FORM({\n        \"class\": \"navbar-form navbar-left\"\n      }, \"\\n                    \", Spacebars.include(view.lookupTemplate(\"datepicker\")), \"\\n                \"), \"\\n            \" ];\n    }), \"\\n            \", HTML.FORM({\n      \"class\": \"navbar-form navbar-right\"\n    }, \"\\n                \\n                \", HTML.BUTTON({\n      type: \"button\",\n      id: \"newAppointButton\",\n      \"class\": \"btn btn-primary\"\n    }, \"Book A Cab\"), \"\\n             \", HTML.BUTTON({\n      type: \"button\",\n      id: \"signOutButton\",\n      \"class\": \"btn\"\n    }, \"Sign Out\"), \"\\n            \"), \"\\n\\n           \\n        \"), \"\\n        \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n"]}},{"type":"js","data":"(function(){closeTimeout = \"\";//the handle to the timeout which closes appointmentEdit after 3 seconds.\n//declared here for globallity.\nrerenderDep = new Deps.Dependency();\n\ndayDelta = function (date) {\n\tvar diff = moment(date).diff(moment().startOf('day'), \"days\");\n\tif (diff===1){\n\t\treturn \" tomorrow\";\n\t}\n\telse if (diff===-1) {\n\t\treturn \" yesterday\";\n\t}\n\telse if (diff === 0)\n\t{\n\t\treturn \" today\"\n\t}\n\telse if (diff > 1)\n\t{\n\t\treturn \" in \" +Math.abs(diff)+ \" days\"\n\t}\n\telse\n\t{\n\t\treturn \" \"+Math.abs(diff)+\" days ago\"\n\t}\n};\n\n}).call(this);\n","servePath":"/client/lib/clientobjects.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/lib/clientobjects.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/lib/clientobjects.js","sourcesContent":["closeTimeout = \"\";//the handle to the timeout which closes appointmentEdit after 3 seconds.\n//declared here for globallity.\nrerenderDep = new Deps.Dependency();\n\ndayDelta = function (date) {\n\tvar diff = moment(date).diff(moment().startOf('day'), \"days\");\n\tif (diff===1){\n\t\treturn \" tomorrow\";\n\t}\n\telse if (diff===-1) {\n\t\treturn \" yesterday\";\n\t}\n\telse if (diff === 0)\n\t{\n\t\treturn \" today\"\n\t}\n\telse if (diff > 1)\n\t{\n\t\treturn \" in \" +Math.abs(diff)+ \" days\"\n\t}\n\telse\n\t{\n\t\treturn \" \"+Math.abs(diff)+\" days ago\"\n\t}\n};\n"]}},{"type":"js","data":"(function(){\nchangeParams = function(inputObj) {\n\t// Call it like this: changeParams({time: \"12:00 AM\", date: \"2015-02-02\", providerName: \"Provider\"})\n\t//All input must be ready-for-url\n\t//Provides non-destructive in-place changing of URL parameters\n\tvar newparams = {};\n\tfor (param in Router.current().params) { //first, copy out all old params\n\t\tif (!Router.current().params.hasOwnProperty(param)) {\n\t\t\tcontinue;//ignores BS properties\n\t\t}\n\t\t//console.log(Router.current().params[param]);\n\t\tnewparams[param] = Router.current().params[param];\n\t}\n\tfor (param in inputObj) {//then replace/add all input params\n\t\tif (!Router.current().params.hasOwnProperty(param)) {\n\t\t\tcontinue;//ignores BS properties\n\t\t}\n\t\t//console.log(inputObj[param]);\n\t\tnewparams[param] = inputObj[param];\n\t}\n\tif (inputObj.hasOwnProperty('route')) {//finally, change route if requested.\n\t\tRouter.go(inputObj.route, newparams);\n\t} else {\n\t\tRouter.go(Router.current().route.getName(), newparams);\n\t}\n\n};\nnewAppointment = function(newtime, block) {\n\t//if block is true, we'll go to newBlockout instead\n\tif (typeof block === \"undefined\") {\n\t\tblock = false;\n\t}\n\tconsole.log(\"newAppointment with time \" + newtime);\n\tvar newparams = {};\n\tif (newtime && newtime instanceof Date) {\n\t\tnewtime = moment(newtime).format('h-mm-A');\n\t} else if (newtime && typeof newtime === \"string\") {\n\t\tnewtime = newtime.replace(':', \"-\").replace(' ', \"-\");\n\t\t//change 12:40 PM to 12-40-PM\n\t}\n\tif (Router.current().params.providerName && Router.current().params.date) {\n\t\tnewparams.date = Router.current().params.date;\n\t\tnewparams.providerName = Router.current().params.providerName;\n\t} else if (Session.get('date') && Session.get(\"selectedProviderName\")) {\n\t\tnewparams.date = moment(Session.get('date')).startOf('day').format('YYYY-MM-DD');\n\t\tnewparams.providerName = Session.get(\"selectedProviderName\");\n\t} else {\n\t\tconsole.error(\"newAppointment called without date or providerName set\");\n\t\tnewparams.date = moment().startOf('day').format('YYYY-MM-DD');\n\t\tnewparams.providerName = providers.findOne().name;\n\t}\n\tif (newtime) {\n\t\tnewparams.time = newtime;\n\t} else {\n\t\tnewparams.time = \"12-00-AM\"\n\t}\n\tconsole.log(newparams);\n\tif (!block) {\n\t\tRouter.go('newAppointment', newparams);\n\t} else {\n\t\tRouter.go('newBlockout', newparams);\n\t}\n};\ngoHome = function(newDate, newProv) {//newDate is a date obj please\n\tvar newparams = {};\n\tif (Session.get('date') && Session.get('selectedProviderName')) {\n\t\tnewparams.date = moment(Session.get('date')).format('YYYY-MM-DD');\n\t\tnewparams.providerName= Session.get('selectedProviderName');\n\t} else {\n\t\tRouter.go('/'); //when moving from non-bookingtable pages.\n\t}\n\tif(newDate) {\n\t\tnewparams.date = moment(newDate).format('YYYY-MM-DD');\n\t}\n\tif(newProv) {\n\t\tnewparams.providerName = newProv;\n\t}\n\n\tRouter.go('bookingTable', newparams);\n};\n}).call(this);\n","servePath":"/client/lib/routechanging.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/lib/routechanging.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/client/lib/routechanging.js","sourcesContent":["\nchangeParams = function(inputObj) {\n\t// Call it like this: changeParams({time: \"12:00 AM\", date: \"2015-02-02\", providerName: \"Provider\"})\n\t//All input must be ready-for-url\n\t//Provides non-destructive in-place changing of URL parameters\n\tvar newparams = {};\n\tfor (param in Router.current().params) { //first, copy out all old params\n\t\tif (!Router.current().params.hasOwnProperty(param)) {\n\t\t\tcontinue;//ignores BS properties\n\t\t}\n\t\t//console.log(Router.current().params[param]);\n\t\tnewparams[param] = Router.current().params[param];\n\t}\n\tfor (param in inputObj) {//then replace/add all input params\n\t\tif (!Router.current().params.hasOwnProperty(param)) {\n\t\t\tcontinue;//ignores BS properties\n\t\t}\n\t\t//console.log(inputObj[param]);\n\t\tnewparams[param] = inputObj[param];\n\t}\n\tif (inputObj.hasOwnProperty('route')) {//finally, change route if requested.\n\t\tRouter.go(inputObj.route, newparams);\n\t} else {\n\t\tRouter.go(Router.current().route.getName(), newparams);\n\t}\n\n};\nnewAppointment = function(newtime, block) {\n\t//if block is true, we'll go to newBlockout instead\n\tif (typeof block === \"undefined\") {\n\t\tblock = false;\n\t}\n\tconsole.log(\"newAppointment with time \" + newtime);\n\tvar newparams = {};\n\tif (newtime && newtime instanceof Date) {\n\t\tnewtime = moment(newtime).format('h-mm-A');\n\t} else if (newtime && typeof newtime === \"string\") {\n\t\tnewtime = newtime.replace(':', \"-\").replace(' ', \"-\");\n\t\t//change 12:40 PM to 12-40-PM\n\t}\n\tif (Router.current().params.providerName && Router.current().params.date) {\n\t\tnewparams.date = Router.current().params.date;\n\t\tnewparams.providerName = Router.current().params.providerName;\n\t} else if (Session.get('date') && Session.get(\"selectedProviderName\")) {\n\t\tnewparams.date = moment(Session.get('date')).startOf('day').format('YYYY-MM-DD');\n\t\tnewparams.providerName = Session.get(\"selectedProviderName\");\n\t} else {\n\t\tconsole.error(\"newAppointment called without date or providerName set\");\n\t\tnewparams.date = moment().startOf('day').format('YYYY-MM-DD');\n\t\tnewparams.providerName = providers.findOne().name;\n\t}\n\tif (newtime) {\n\t\tnewparams.time = newtime;\n\t} else {\n\t\tnewparams.time = \"12-00-AM\"\n\t}\n\tconsole.log(newparams);\n\tif (!block) {\n\t\tRouter.go('newAppointment', newparams);\n\t} else {\n\t\tRouter.go('newBlockout', newparams);\n\t}\n};\ngoHome = function(newDate, newProv) {//newDate is a date obj please\n\tvar newparams = {};\n\tif (Session.get('date') && Session.get('selectedProviderName')) {\n\t\tnewparams.date = moment(Session.get('date')).format('YYYY-MM-DD');\n\t\tnewparams.providerName= Session.get('selectedProviderName');\n\t} else {\n\t\tRouter.go('/'); //when moving from non-bookingtable pages.\n\t}\n\tif(newDate) {\n\t\tnewparams.date = moment(newDate).format('YYYY-MM-DD');\n\t}\n\tif(newProv) {\n\t\tnewparams.providerName = newProv;\n\t}\n\n\tRouter.go('bookingTable', newparams);\n};"]}},{"type":"js","data":"(function(){//AutoForm.debug();\n}).call(this);\n","servePath":"/client/lib/startup.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/lib/startup.js"],"names":[],"mappings":"yBAAA,M","file":"/client/lib/startup.js","sourcesContent":["//AutoForm.debug();"]}},{"type":"js","data":"(function(){\n\nSchema = {};\nSchema.UserProfile = new SimpleSchema({\n    firstName: {\n        type: String,\n        regEx: /^[a-zA-Z-]{2,25}$/,\n        optional: true\n    },\n    lastName: {\n        type: String,\n        regEx: /^[a-zA-Z]{2,25}$/,\n        optional: true\n    },\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['Male', 'Female'],\n        optional: true\n    },\n    organization : {\n        type: String,\n        regEx: /^[a-z0-9A-z .]{3,30}$/,\n        optional: true\n    },\n});\n\nSchema.User = new SimpleSchema({\n    _id: {\n        type: String,\n        regEx: SimpleSchema.RegEx.Id\n    },\n    username: {\n        type: String,\n        regEx: /^[a-z0-9A-Z_]{3,15}$/,\n        // optional: true,\n        custom: function () {\n        \tconsole.log(this);\n        }\n    },\n    emails: {\n    \toptional: true,\n        type: [Object],\n    },\n    \"emails.$.address\": {\n    \toptional: true,\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n    \toptional: true,\n        type: Boolean\n    },\n    createdAt: {\n        type: Date\n    },\n    profile: {\n        type: Schema.UserProfile,\n        optional: true\n    },\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n   \n    roles: {\n        type: [String],\n        optional: true,\n        blackbox: true,\n        allowedValues: ['booker', 'provider', 'admin']\n    },\n \tproviderName: {\n \t\ttype: String,\n \t\toptional: true\n \t}\n});\n\nMeteor.users.attachSchema(Schema.User);\n\n}).call(this);\n","servePath":"/lib/accounts.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/accounts.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/accounts.js","sourcesContent":["\n\nSchema = {};\nSchema.UserProfile = new SimpleSchema({\n    firstName: {\n        type: String,\n        regEx: /^[a-zA-Z-]{2,25}$/,\n        optional: true\n    },\n    lastName: {\n        type: String,\n        regEx: /^[a-zA-Z]{2,25}$/,\n        optional: true\n    },\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['Male', 'Female'],\n        optional: true\n    },\n    organization : {\n        type: String,\n        regEx: /^[a-z0-9A-z .]{3,30}$/,\n        optional: true\n    },\n});\n\nSchema.User = new SimpleSchema({\n    _id: {\n        type: String,\n        regEx: SimpleSchema.RegEx.Id\n    },\n    username: {\n        type: String,\n        regEx: /^[a-z0-9A-Z_]{3,15}$/,\n        // optional: true,\n        custom: function () {\n        \tconsole.log(this);\n        }\n    },\n    emails: {\n    \toptional: true,\n        type: [Object],\n    },\n    \"emails.$.address\": {\n    \toptional: true,\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n    \toptional: true,\n        type: Boolean\n    },\n    createdAt: {\n        type: Date\n    },\n    profile: {\n        type: Schema.UserProfile,\n        optional: true\n    },\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n   \n    roles: {\n        type: [String],\n        optional: true,\n        blackbox: true,\n        allowedValues: ['booker', 'provider', 'admin']\n    },\n \tproviderName: {\n \t\ttype: String,\n \t\toptional: true\n \t}\n});\n\nMeteor.users.attachSchema(Schema.User);\n"]}},{"type":"js","data":"(function(){appointmentList = new Meteor.Collection(\"appointmentList\");\nappointmentList.attachSchema(new SimpleSchema({\n\tfirstname: {\n\t\ttype: String,\n\t\tlabel: \"First Name\",\n\t\tmax: 100\n\t},\n\tlastname: {\n\t\ttype: String,\n\t\tlabel: \"Last Name\",\n\t\tmax: 100\n\t},\n\tphone: {\n\t\ttype: String,\n\t\tlabel: \"Phone Number\",\n\t\toptional: true\n\t},\n\tnotes: {\n\t\ttype: String,\n\t\tlabel: \"Address\",\n\t\toptional: true\n\t},\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Time\",\n\t\tindex: true,\n\t\tcustom: function() {\n\t\t\treturn checkDate(this, true);\n\t\t}\n\t},\n\tlength: {\n\t\ttype: Number,\n\t\tlabel: \"Cab booking duration\",\n\t\tmin: 5,\n\t\t\n\t\tautoValue: function() {\n\t\t\tif (typeof this.value == 'undefined') {\n\t\t\t\tvar cleanDate = moment(this.field('date').value).startOf('day').toDate();\n\t\t\t\tvar provObject = getProvObject(cleanDate, this.field('providerName').value);\n\t\t\t\treturn provObject.appointmentLength;\n\t\t\t}\n\t\t},\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"multiple\";\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\",\n\t\tautoform: {\n\t\t\tomit: true\n\t\t}\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tautoform: {\n\t\t\tomit: true\n\t\t},\n\t\tautoValue: function() {\n\t\t\tif (this.isInsert) {\n\t\t\t\treturn new Date();\n\t\t\t} else if (this.isUpsert) {\n\t\t\t\treturn {$setOnInsert: new Date()};\n\t\t\t} else {\n\t\t\t\tthis.unset();\n\t\t\t}\n\t\t}\n\t}\n}));\nappointmentList.simpleSchema().messages({\n\t\n\tmultiple: \"[value] must be a multiple of 5.\", \n\toverlappingDates:\"That time overlaps another appointment.\",\n\toverlappingBlockout:\"That time overlaps a blockout.\",\n\tdateOutOfBounds: \"Appointment time must be within [value] o'clock.\"\n});\n\n}).call(this);\n","servePath":"/lib/appointmentList.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/appointmentList.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/appointmentList.js","sourcesContent":["appointmentList = new Meteor.Collection(\"appointmentList\");\nappointmentList.attachSchema(new SimpleSchema({\n\tfirstname: {\n\t\ttype: String,\n\t\tlabel: \"First Name\",\n\t\tmax: 100\n\t},\n\tlastname: {\n\t\ttype: String,\n\t\tlabel: \"Last Name\",\n\t\tmax: 100\n\t},\n\tphone: {\n\t\ttype: String,\n\t\tlabel: \"Phone Number\",\n\t\toptional: true\n\t},\n\tnotes: {\n\t\ttype: String,\n\t\tlabel: \"Address\",\n\t\toptional: true\n\t},\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Time\",\n\t\tindex: true,\n\t\tcustom: function() {\n\t\t\treturn checkDate(this, true);\n\t\t}\n\t},\n\tlength: {\n\t\ttype: Number,\n\t\tlabel: \"Cab booking duration\",\n\t\tmin: 5,\n\t\t\n\t\tautoValue: function() {\n\t\t\tif (typeof this.value == 'undefined') {\n\t\t\t\tvar cleanDate = moment(this.field('date').value).startOf('day').toDate();\n\t\t\t\tvar provObject = getProvObject(cleanDate, this.field('providerName').value);\n\t\t\t\treturn provObject.appointmentLength;\n\t\t\t}\n\t\t},\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"multiple\";\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\",\n\t\tautoform: {\n\t\t\tomit: true\n\t\t}\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tautoform: {\n\t\t\tomit: true\n\t\t},\n\t\tautoValue: function() {\n\t\t\tif (this.isInsert) {\n\t\t\t\treturn new Date();\n\t\t\t} else if (this.isUpsert) {\n\t\t\t\treturn {$setOnInsert: new Date()};\n\t\t\t} else {\n\t\t\t\tthis.unset();\n\t\t\t}\n\t\t}\n\t}\n}));\nappointmentList.simpleSchema().messages({\n\t\n\tmultiple: \"[value] must be a multiple of 5.\", \n\toverlappingDates:\"That time overlaps another appointment.\",\n\toverlappingBlockout:\"That time overlaps a blockout.\",\n\tdateOutOfBounds: \"Appointment time must be within [value] o'clock.\"\n});\n"]}},{"type":"js","data":"(function(){blockouts = new Meteor.Collection('blockouts');\n\nblockouts.attachSchema(new SimpleSchema({\n\ttitle: {\n\t\ttype: String,\n\t\tlabel: \"Title\",\n\t\tdefaultValue: \"Break\",\n\t},\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Blockout Date\",\n\t\tcustom: function() {\n\t\t\treturn checkDate(this, false);\n\t\t}\n\t},\n\tlength: {\n\t\ttype: Number,\n\t\tlabel: \"Length\",\n\t\tmin:5,\n\t\tdefaultValue: 15,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\"\n\t}\n}));\nblockouts.simpleSchema().messages({\n\t\n\tmultiple: \"[value] must be a multiple of 5.\",\n\toverlappingDates:\"That time overlaps a booked slot! Try Later\",\n\toverlappingBlockout:\"That time overlaps another blockout.\",\n\tdateOutOfBounds: \"Blockout time must be within [value] o'clock.\"\n});\n\n}).call(this);\n","servePath":"/lib/blockouts.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/blockouts.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/blockouts.js","sourcesContent":["blockouts = new Meteor.Collection('blockouts');\n\nblockouts.attachSchema(new SimpleSchema({\n\ttitle: {\n\t\ttype: String,\n\t\tlabel: \"Title\",\n\t\tdefaultValue: \"Break\",\n\t},\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Blockout Date\",\n\t\tcustom: function() {\n\t\t\treturn checkDate(this, false);\n\t\t}\n\t},\n\tlength: {\n\t\ttype: Number,\n\t\tlabel: \"Length\",\n\t\tmin:5,\n\t\tdefaultValue: 15,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\"\n\t}\n}));\nblockouts.simpleSchema().messages({\n\t\n\tmultiple: \"[value] must be a multiple of 5.\",\n\toverlappingDates:\"That time overlaps a booked slot! Try Later\",\n\toverlappingBlockout:\"That time overlaps another blockout.\",\n\tdateOutOfBounds: \"Blockout time must be within [value] o'clock.\"\n});\n"]}},{"type":"js","data":"(function(){getProvObject = function(date, providerName) {\n\tvar provObject = unusualDays.findOne({date: date, providerName: providerName});\n\tif (typeof provObject === \"undefined\") {\n\t\tprovObject = providers.findOne({name: providerName});\n\t}\n\treturn provObject;\n};\n\ngetBlockouts = function(providerName, date) {\n\t//Returns a complete list of blockouts for a given provider and day.\n\tvar day = moment(date).format(\"dddd\").toLowerCase();\n\tif (unusualDays.findOne({date: date})) {\n\t\tvar providerBlockouts = []\n\t} else {\n\t\ttry {\n\t\t\tproviderBlockouts = providers.findOne({name: providerName}, {fields: {\"blockouts\": 1}}).blockouts;\n\t\t} catch(e) {}//fails if no blockout object on the provider. this is normal.\n\n\t}\n\tvar singleDayBlockouts = blockouts.find(\n\t\t{date:\n\t\t\t{$gte: \tmoment(date).startOf('day').toDate(),\n\t\t\t$lt: moment(date).endOf('day').toDate()},\n\t\t\tproviderName: providerName}).fetch();\n\n\tvar ret = _.union(providerBlockouts, singleDayBlockouts);\n\tret = _.filter(ret, function(block) {\n\t\tif (typeof block !== \"undefined\" && !block.hasOwnProperty(\"day\")) {\n\t\t\treturn true;//this means the blockout is custom for today, thus kept\n\t\t} else if (typeof block !== \"undefined\") {\n\t\t\treturn (block.day === day || block.day === \"all\");\n\t\t}//this means the blockout is a recurring one for this provider, so kept if\n\t\t//is an everyday one or for this day of the week.\n\t\treturn false;\n\t});\n\t//console.log(ret);\n\treturn ret;\n};\n\ncheckDate = function(thisobj, isAppnt) {\n\t//Checks a given date falls within the bounds of the current day and does not overlap\n\t//appointments or blockouts\n\n\t\n\t//////////////////////////////////////////////////\n\t/////////////CHECKING APPOINTMENT OVERLAP\n\t/////////////////////////////////////////////////\n\tvar currentAppoint = thisobj.value;\n\tvar currentAppointEnd = moment(currentAppoint).add(parseInt(thisobj.field(\"length\").value), 'minutes');\n\tvar currentRange = moment(currentAppoint).twix(currentAppointEnd);\n\tvar queryStart = moment(thisobj.value).startOf('day').toDate();\n\tvar queryEnd = moment(thisobj.value).endOf('day').toDate();\n\t//console.log(JSON.stringify({date: {$gte: queryStart, $lt:queryEnd},providerName: thisobj.field(\"providerName\").value}));\n\tvar appoints = appointmentList.find({date: {$gte: queryStart, $lt:queryEnd},providerName: thisobj.field(\"providerName\").value}).fetch();\n\tvar ret;\n\t_.each(appoints, function(comparedAppoint) {\n\t\tvar comparedRange = moment(comparedAppoint.date)\n\t\t\t.twix(moment(comparedAppoint.date)\n\t\t\t\t.add(comparedAppoint.length, \"minutes\"));\n\n\t\t//console.log(\"Comparing \" + currentRange.format() + \" with \" + comparedRange.format());\n\t\tvar overlaps = currentRange.overlaps(comparedRange);\n\t\tif (overlaps) {\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tif (!(thisobj.docId === comparedAppoint._id)) {\n\t\t\t\t\tconsole.log(\"different appointments clashing\");\n\t\t\t\t\tret = \"overlappingDates\";\n\t\t\t\t\treturn \"overlappingDates\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Meteor.isClient) {\n\t\t\t\tif (!(Session.get(\"currentlyEditingDoc\") === comparedAppoint._id)) {\n\t\t\t\t\tconsole.log(\"different appointments clashing\");\n\t\t\t\t\tret = \"overlappingDates\";\n\t\t\t\t\treturn \"overlappingDates\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tif (typeof ret === \"string\") {\n\t\treturn ret;\n\t}\n\t\n\t\n};\n\n\n}).call(this);\n","servePath":"/lib/objects.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/objects.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/objects.js","sourcesContent":["getProvObject = function(date, providerName) {\n\tvar provObject = unusualDays.findOne({date: date, providerName: providerName});\n\tif (typeof provObject === \"undefined\") {\n\t\tprovObject = providers.findOne({name: providerName});\n\t}\n\treturn provObject;\n};\n\ngetBlockouts = function(providerName, date) {\n\t//Returns a complete list of blockouts for a given provider and day.\n\tvar day = moment(date).format(\"dddd\").toLowerCase();\n\tif (unusualDays.findOne({date: date})) {\n\t\tvar providerBlockouts = []\n\t} else {\n\t\ttry {\n\t\t\tproviderBlockouts = providers.findOne({name: providerName}, {fields: {\"blockouts\": 1}}).blockouts;\n\t\t} catch(e) {}//fails if no blockout object on the provider. this is normal.\n\n\t}\n\tvar singleDayBlockouts = blockouts.find(\n\t\t{date:\n\t\t\t{$gte: \tmoment(date).startOf('day').toDate(),\n\t\t\t$lt: moment(date).endOf('day').toDate()},\n\t\t\tproviderName: providerName}).fetch();\n\n\tvar ret = _.union(providerBlockouts, singleDayBlockouts);\n\tret = _.filter(ret, function(block) {\n\t\tif (typeof block !== \"undefined\" && !block.hasOwnProperty(\"day\")) {\n\t\t\treturn true;//this means the blockout is custom for today, thus kept\n\t\t} else if (typeof block !== \"undefined\") {\n\t\t\treturn (block.day === day || block.day === \"all\");\n\t\t}//this means the blockout is a recurring one for this provider, so kept if\n\t\t//is an everyday one or for this day of the week.\n\t\treturn false;\n\t});\n\t//console.log(ret);\n\treturn ret;\n};\n\ncheckDate = function(thisobj, isAppnt) {\n\t//Checks a given date falls within the bounds of the current day and does not overlap\n\t//appointments or blockouts\n\n\t\n\t//////////////////////////////////////////////////\n\t/////////////CHECKING APPOINTMENT OVERLAP\n\t/////////////////////////////////////////////////\n\tvar currentAppoint = thisobj.value;\n\tvar currentAppointEnd = moment(currentAppoint).add(parseInt(thisobj.field(\"length\").value), 'minutes');\n\tvar currentRange = moment(currentAppoint).twix(currentAppointEnd);\n\tvar queryStart = moment(thisobj.value).startOf('day').toDate();\n\tvar queryEnd = moment(thisobj.value).endOf('day').toDate();\n\t//console.log(JSON.stringify({date: {$gte: queryStart, $lt:queryEnd},providerName: thisobj.field(\"providerName\").value}));\n\tvar appoints = appointmentList.find({date: {$gte: queryStart, $lt:queryEnd},providerName: thisobj.field(\"providerName\").value}).fetch();\n\tvar ret;\n\t_.each(appoints, function(comparedAppoint) {\n\t\tvar comparedRange = moment(comparedAppoint.date)\n\t\t\t.twix(moment(comparedAppoint.date)\n\t\t\t\t.add(comparedAppoint.length, \"minutes\"));\n\n\t\t//console.log(\"Comparing \" + currentRange.format() + \" with \" + comparedRange.format());\n\t\tvar overlaps = currentRange.overlaps(comparedRange);\n\t\tif (overlaps) {\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tif (!(thisobj.docId === comparedAppoint._id)) {\n\t\t\t\t\tconsole.log(\"different appointments clashing\");\n\t\t\t\t\tret = \"overlappingDates\";\n\t\t\t\t\treturn \"overlappingDates\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Meteor.isClient) {\n\t\t\t\tif (!(Session.get(\"currentlyEditingDoc\") === comparedAppoint._id)) {\n\t\t\t\t\tconsole.log(\"different appointments clashing\");\n\t\t\t\t\tret = \"overlappingDates\";\n\t\t\t\t\treturn \"overlappingDates\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tif (typeof ret === \"string\") {\n\t\treturn ret;\n\t}\n\t\n\t\n};\n\n"]}},{"type":"js","data":"(function(){providers =  new Meteor.Collection(\"providers\");\n// blockoutSchema = new SimpleSchema({\n\n// });\n// providers.attachSchema(blockoutSchema);\nproviders.attachSchema(new SimpleSchema({\n\tname: {\n\t\ttype: String,\n\t\tlabel: \"Name\",\n\t\tunique: true,\n\t\tindex: true\n\t},\n\tstartTime: {\n\t\ttype: Number,\n\t\tlabel: \"Usual Start Hour\",\n\t\tmin: 0,\n\t\tmax: 22,\n\t\t//TODO: When this is set, verify that no\n\t\t//current appointments voilate the new boundries\n\t\tdefaultValue: 9,\n\t\tcustom: function(){\n\t\t\tif (this.field(\"endTime\").value <= this.value){\n\t\t\t\treturn \"before\"\n\t\t\t}\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tvar appoints = appointmentList.find({providerName: this.field('name').value}).fetch();\n\t\t\t\t//console.log(appoints);\n\t\t\t\tfor (var appointIndex in appoints) {\n\t\t\t\t\tif (appoints.hasOwnProperty(appointIndex)) {\n\t\t\t\t\t\tconsole.log(\"comparing \" + moment(appoints[appointIndex].date).hours() + \" with new hour: \"+this.value);\n\t\t\t\t\t\tif (moment(appoints[appointIndex].date).hours() < this.value) {\n\t\t\t\t\t\t\treturn \"wouldPushOutOfBounds\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tendTime: {\n\t\ttype: Number,\n\t\tlabel: \"Usual End Hour (24h)\",\n\t\tmin: 1,\n\t\tmax: 23,\n\t\tdefaultValue: 17,\n\t\tcustom: function(){\n\t\t\t//need to get server to iterate over all appointments\n\t\t\t//and check they are still valid in new bounds\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tvar appoints = appointmentList.find({providerName: this.field('name').value}).fetch();\n\t\t\t\tfor (var appointIndex in appoints) {\n\t\t\t\t\tif (appoints.hasOwnProperty(appointIndex)) {\n\t\t\t\t\t\tif (moment(appoints[appointIndex].date).hours() > this.value) {\n\t\t\t\t\t\t\treturn \"wouldPushOutOfBounds\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tappointmentLength: {\n\t\ttype: Number,\n\t\tlabel: \"Usual Appointment Length\",\n\t\tmin: 5,\n\t\tmax: 120,\n\t\tdefaultValue: 15,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t},\n\tblockouts: {\n\t\ttype: [Object],\n\t\t// maxCount: 7,\n\t\toptional: true\n\t},\n\t\"blockouts.$.day\": {\n\t\ttype: String,\n\t\tlabel: \"Day of week\",\n\t\tallowedValues: [\n\t\t\"monday\",\n\t\t\"tuesday\",\n\t\t\"wednesday\",\n\t\t\"thursday\",\n\t\t\"friday\",\n\t\t\"saturday\",\n\t\t\"sunday\",\n\t\t\"all\" ]\n\t},\n\t\"blockouts.$.title\": {\n\t\ttype: String,\n\t\tlabel: \"Title\"\n\t},\n\t\"blockouts.$.time\": {\n\t\ttype: String,\n\t\tlabel: \"Start Time\",\n\t\tregEx: /^[0-2]?\\d:\\d\\d [APap]m|M$/,\n\t\tautoform: {\n\t\t\ttype: \"timePicker\"\n\t\t},\n\t\tcustom: function() {\n\t\t\tvar dateObj = moment(this.value, \"h:mm A\");\n\t\t\tvar compareTwix = moment(dateObj).twix(moment(dateObj).add(this.siblingField('length').value, \"minutes\"));\n\t\t\tvar provObject = providers.findOne(this.docId);\n\t\t\tvar exampleTwix = moment().startOf('day').hour(provObject.startTime).twix(\n\t\t\t\tmoment().startOf('day').hour(provObject.endTime));\n\t\t\tif (!exampleTwix.engulfs(compareTwix)) {\n\t\t\t\treturn \"dateOutOfBounds\"\n\t\t\t}\n\t\t}\n\t},\n\t\"blockouts.$.length\": {\n\t\ttype: Number,\n\t\tlabel: \"Length\",\n\t\tmin:5,\n\t\tdefaultValue: 15,\n\t\tautoform: {\n\t\t\tstep: 5\n\t\t},\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t}\n}));\n\n// blockoutSchema.simpleSchema().messages({\n// \tmod5: \"[label] must be a multiple of 5\",\n// })\nproviders.simpleSchema().messages({\n\tmod5: \"[label] must be a multiple of 5\",\n\tbefore: \"[label] must be before End Time.\",\n\twouldPushOutOfBounds: \"This change would push appointments out of bounds.\",\n\tdateOutOfBounds: \"This repeating blockout is out of the usual day for this provider.\"\n});\nif (Meteor.isServer){\n\tif (providers.find({}).fetch().length === 0) {\n\t\tproviders.insert({name: \"Default Provider\"})\n\t}\n}\n\n// console.log(providers.find().fetch())\n\n}).call(this);\n","servePath":"/lib/providers.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/providers.js"],"names":[],"mappings":"yfile":"/lib/providers.js","sourcesContent":["providers =  new Meteor.Collection(\"providers\");\n// blockoutSchema = new SimpleSchema({\n\n// });\n// providers.attachSchema(blockoutSchema);\nproviders.attachSchema(new SimpleSchema({\n\tname: {\n\t\ttype: String,\n\t\tlabel: \"Name\",\n\t\tunique: true,\n\t\tindex: true\n\t},\n\tstartTime: {\n\t\ttype: Number,\n\t\tlabel: \"Usual Start Hour\",\n\t\tmin: 0,\n\t\tmax: 22,\n\t\t//TODO: When this is set, verify that no\n\t\t//current appointments voilate the new boundries\n\t\tdefaultValue: 9,\n\t\tcustom: function(){\n\t\t\tif (this.field(\"endTime\").value <= this.value){\n\t\t\t\treturn \"before\"\n\t\t\t}\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tvar appoints = appointmentList.find({providerName: this.field('name').value}).fetch();\n\t\t\t\t//console.log(appoints);\n\t\t\t\tfor (var appointIndex in appoints) {\n\t\t\t\t\tif (appoints.hasOwnProperty(appointIndex)) {\n\t\t\t\t\t\tconsole.log(\"comparing \" + moment(appoints[appointIndex].date).hours() + \" with new hour: \"+this.value);\n\t\t\t\t\t\tif (moment(appoints[appointIndex].date).hours() < this.value) {\n\t\t\t\t\t\t\treturn \"wouldPushOutOfBounds\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tendTime: {\n\t\ttype: Number,\n\t\tlabel: \"Usual End Hour (24h)\",\n\t\tmin: 1,\n\t\tmax: 23,\n\t\tdefaultValue: 17,\n\t\tcustom: function(){\n\t\t\t//need to get server to iterate over all appointments\n\t\t\t//and check they are still valid in new bounds\n\t\t\tif (Meteor.isServer) {\n\t\t\t\tvar appoints = appointmentList.find({providerName: this.field('name').value}).fetch();\n\t\t\t\tfor (var appointIndex in appoints) {\n\t\t\t\t\tif (appoints.hasOwnProperty(appointIndex)) {\n\t\t\t\t\t\tif (moment(appoints[appointIndex].date).hours() > this.value) {\n\t\t\t\t\t\t\treturn \"wouldPushOutOfBounds\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tappointmentLength: {\n\t\ttype: Number,\n\t\tlabel: \"Usual Appointment Length\",\n\t\tmin: 5,\n\t\tmax: 120,\n\t\tdefaultValue: 15,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t},\n\tblockouts: {\n\t\ttype: [Object],\n\t\t// maxCount: 7,\n\t\toptional: true\n\t},\n\t\"blockouts.$.day\": {\n\t\ttype: String,\n\t\tlabel: \"Day of week\",\n\t\tallowedValues: [\n\t\t\"monday\",\n\t\t\"tuesday\",\n\t\t\"wednesday\",\n\t\t\"thursday\",\n\t\t\"friday\",\n\t\t\"saturday\",\n\t\t\"sunday\",\n\t\t\"all\" ]\n\t},\n\t\"blockouts.$.title\": {\n\t\ttype: String,\n\t\tlabel: \"Title\"\n\t},\n\t\"blockouts.$.time\": {\n\t\ttype: String,\n\t\tlabel: \"Start Time\",\n\t\tregEx: /^[0-2]?\\d:\\d\\d [APap]m|M$/,\n\t\tautoform: {\n\t\t\ttype: \"timePicker\"\n\t\t},\n\t\tcustom: function() {\n\t\t\tvar dateObj = moment(this.value, \"h:mm A\");\n\t\t\tvar compareTwix = moment(dateObj).twix(moment(dateObj).add(this.siblingField('length').value, \"minutes\"));\n\t\t\tvar provObject = providers.findOne(this.docId);\n\t\t\tvar exampleTwix = moment().startOf('day').hour(provObject.startTime).twix(\n\t\t\t\tmoment().startOf('day').hour(provObject.endTime));\n\t\t\tif (!exampleTwix.engulfs(compareTwix)) {\n\t\t\t\treturn \"dateOutOfBounds\"\n\t\t\t}\n\t\t}\n\t},\n\t\"blockouts.$.length\": {\n\t\ttype: Number,\n\t\tlabel: \"Length\",\n\t\tmin:5,\n\t\tdefaultValue: 15,\n\t\tautoform: {\n\t\t\tstep: 5\n\t\t},\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t}\n\t}\n}));\n\n// blockoutSchema.simpleSchema().messages({\n// \tmod5: \"[label] must be a multiple of 5\",\n// })\nproviders.simpleSchema().messages({\n\tmod5: \"[label] must be a multiple of 5\",\n\tbefore: \"[label] must be before End Time.\",\n\twouldPushOutOfBounds: \"This change would push appointments out of bounds.\",\n\tdateOutOfBounds: \"This repeating blockout is out of the usual day for this provider.\"\n});\nif (Meteor.isServer){\n\tif (providers.find({}).fetch().length === 0) {\n\t\tproviders.insert({name: \"Default Provider\"})\n\t}\n}\n\n// console.log(providers.find().fetch())\n"]}},{"type":"js","data":"(function(){checkBounds = function(thisobj) {\n\t//used for checking whether the new bounds of an unusual day are valid. Used on creation and on edit of hours\n\t//validity is determined by whether any appointments are currently out of bounds.\n\tif (Meteor.isServer) {\n\t\ttry {//existing\n\t\t\tvar cleanDate = moment(unusualDays.findOne(thisobj.docId).date);\n\t\t\tvar provider = unusualDays.findOne(thisobj.docId).providerName;\n\t\t} catch (e) {//new\n\t\t\tcleanDate = moment(thisobj.field(\"date\").value);\n\t\t\tprovider = thisobj.field(\"providerName\").value;\n\t\t}\n\t} else {//client\n\t\ttry {\n\t\t\tcleanDate = moment(unusualDays.findOne({date: Session.get('date')}).date);\n\t\t} catch (e) { //new unusual day.\n\t\t\tcleanDate = moment(Session.get('date'));\n\t\t}\n\t\tprovider = Session.get(\"selectedProviderName\");\n\t}\n\t//new start and end of working day\n\tvar providerObj = providers.findOne({name: provider});\n\tif(thisobj.key ===\"startTime\") {\n\t\tvar startDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.value).toDate();\n\t\tvar endDate = cleanDate.\n\t\tclone().\n\t\ttz(\"Pacific/Auckland\").\n\t\thour(thisobj.field(\"endTime\").value).\n\t\tadd(providerObj.appointmentLength, \"minutes\").\n\t\ttoDate();\n\t} else {\n\t\tstartDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.field(\"startTime\").value).toDate();\n\t\tendDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.value).add(providerObj.appointmentLength, \"minutes\").toDate();\n\t}\n\n\tvar dayTwix = moment(startDate).twix(endDate);\n\n\t//start and end of day for query\n\t//console.log(cleanDate.format());\n\n\tvar midnight = moment(cleanDate).startOf(\"day\").toDate();\n\tvar midday = moment(cleanDate).endOf(\"day\").toDate();//it's not actually midday but fuck the police\n\tvar appoints = appointmentList.find({date: {$gte: midnight, $lt: midday},\n\t\tproviderName: provider}).fetch();\n\tvar theblockouts = getBlockouts();\n\tvar ret = null;\n\t_.each(_.union(appoints,theblockouts), function(appoint) {//check each appointment and blockout still fits\n\t\tconsole.log(\"comparing \"+appoint.time+\" to \"+dayTwix.format());\n\t\t//console.log(appoint);\n\t\tif (appoint.hasOwnProperty(\"date\")) {\n\t\t\tif(!dayTwix.engulfs(moment(appoint.date).twix(moment(appoint.date).add(appoint.length, 'minutes')))) {\n\t\t\t\tconsole.log(\"fail\");\n\t\t\t\tret =  \"dateOutOfBounds\";\n\t\t\t}\n\t\t} else { //this is a blockout from the provider\n\t\t\tvar blockStartDate = moment(cleanDate.tz('Pacific/Auckland').format('YYYY MM DD ') + appoint.time,\n\t\t\t\t\"YYYY MM DD HH:mm A\");\n\t\t\tvar blockTwix = moment(blockStartDate).twix(moment(blockStartDate).add(appoint.length, \"minutes\"));\n\t\t\tif (!(dayTwix.engulfs(blockTwix))) {\n\t\t\t\tconsole.log(\"fail\");\n\t\t\t\tret =  \"dateOutOfBounds\";\n\t\t\t}\n\t\t}\n\n\t});\n\treturn ret;\n};\nunusualDays = new Meteor.Collection(\"unusualDays\");\nunusualDays.attachSchema( new SimpleSchema({\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Date\",\n\t\tindex: 1,\n\t\tautoValue: function(isInsert) {\n\t\t\tif(!isInsert) {\n\t\t\t\tthis.unset();\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\"\n\t\t// custom:\n\t\t//TODO: Make sure provider Name exists\n\t},\n\tnotes: {\n\t\ttype: String,\n\t\tlabel: \"Notes\",\n\t\toptional: true\n\t},\n\tstartTime: {\n\t\ttype: Number,\n\t\tlabel: \"Start Time\",\n\t\tmin:1,\n\t\tmax:23,\n\t\tcustom: function() {\n\t\t\tif (this.isSet) {\n\t\t\t\treturn checkBounds(this);\n\t\t\t}\n\t\t}\n\t},\n\tendTime: {\n\t\ttype: Number,\n\t\tlabel: \"End Time (24h time)\",\n\t\tautoValue: function() {\n\t\t\tif(!this.isSet && this.isInsert && this.field(\"providerName\").isSet) {\n\t\t\t\treturn providers.findOne({name: this.field(\"providerName\").value})[\"endTime\"];\n\t\t\t}\n\t\t},\n\t\tmin:2,\n\t\tmax:24,\n\t\tcustom: function(){\n\t\t\tif (this.isSet) {\n\t\t\t\tif (this.field(\"startTime\").value >= this.value){\n\t\t\t\t\treturn \"startAfterEnd\"\n\t\t\t\t}\n\t\t\t\treturn checkBounds(this);\n\t\t\t}\n\n\t\t}\n\t},\n\tappointmentLength: {\n\t\ttype: Number,\n\t\tlabel: \"Appointment Length\",\n\t\tmin: 1,\n\t\tmax: 60,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t},\n\t\tautoValue: function() {\n\t\t\tif(this.isInsert && this.field(\"providerName\").isSet) {\n\t\t\t\treturn providers.findOne({name: this.field(\"providerName\").value})[\"appointmentLength\"];\n\t\t\t}\n\t\t}\n\t}\n}));\nunusualDays.simpleSchema().messages({\n\tmod5: \"[value] must be a multiple of 5.\",\n\tstartAfterEnd:\"Start Time must be before End Time.\",\n\tendBeforeStart:\"End time must be after Before time.\",\n\tdateOutOfBounds: \"An Appointment or Blockout would be put out of bounds by this change.\"\n});\n\n}).call(this);\n","servePath":"/lib/unusualdays.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/unusualdays.js"],"names":[],"mappings":"yfile":"/lib/unusualdays.js","sourcesContent":["checkBounds = function(thisobj) {\n\t//used for checking whether the new bounds of an unusual day are valid. Used on creation and on edit of hours\n\t//validity is determined by whether any appointments are currently out of bounds.\n\tif (Meteor.isServer) {\n\t\ttry {//existing\n\t\t\tvar cleanDate = moment(unusualDays.findOne(thisobj.docId).date);\n\t\t\tvar provider = unusualDays.findOne(thisobj.docId).providerName;\n\t\t} catch (e) {//new\n\t\t\tcleanDate = moment(thisobj.field(\"date\").value);\n\t\t\tprovider = thisobj.field(\"providerName\").value;\n\t\t}\n\t} else {//client\n\t\ttry {\n\t\t\tcleanDate = moment(unusualDays.findOne({date: Session.get('date')}).date);\n\t\t} catch (e) { //new unusual day.\n\t\t\tcleanDate = moment(Session.get('date'));\n\t\t}\n\t\tprovider = Session.get(\"selectedProviderName\");\n\t}\n\t//new start and end of working day\n\tvar providerObj = providers.findOne({name: provider});\n\tif(thisobj.key ===\"startTime\") {\n\t\tvar startDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.value).toDate();\n\t\tvar endDate = cleanDate.\n\t\tclone().\n\t\ttz(\"Pacific/Auckland\").\n\t\thour(thisobj.field(\"endTime\").value).\n\t\tadd(providerObj.appointmentLength, \"minutes\").\n\t\ttoDate();\n\t} else {\n\t\tstartDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.field(\"startTime\").value).toDate();\n\t\tendDate = cleanDate.clone().tz(\"Pacific/Auckland\").hour(thisobj.value).add(providerObj.appointmentLength, \"minutes\").toDate();\n\t}\n\n\tvar dayTwix = moment(startDate).twix(endDate);\n\n\t//start and end of day for query\n\t//console.log(cleanDate.format());\n\n\tvar midnight = moment(cleanDate).startOf(\"day\").toDate();\n\tvar midday = moment(cleanDate).endOf(\"day\").toDate();//it's not actually midday but fuck the police\n\tvar appoints = appointmentList.find({date: {$gte: midnight, $lt: midday},\n\t\tproviderName: provider}).fetch();\n\tvar theblockouts = getBlockouts();\n\tvar ret = null;\n\t_.each(_.union(appoints,theblockouts), function(appoint) {//check each appointment and blockout still fits\n\t\tconsole.log(\"comparing \"+appoint.time+\" to \"+dayTwix.format());\n\t\t//console.log(appoint);\n\t\tif (appoint.hasOwnProperty(\"date\")) {\n\t\t\tif(!dayTwix.engulfs(moment(appoint.date).twix(moment(appoint.date).add(appoint.length, 'minutes')))) {\n\t\t\t\tconsole.log(\"fail\");\n\t\t\t\tret =  \"dateOutOfBounds\";\n\t\t\t}\n\t\t} else { //this is a blockout from the provider\n\t\t\tvar blockStartDate = moment(cleanDate.tz('Pacific/Auckland').format('YYYY MM DD ') + appoint.time,\n\t\t\t\t\"YYYY MM DD HH:mm A\");\n\t\t\tvar blockTwix = moment(blockStartDate).twix(moment(blockStartDate).add(appoint.length, \"minutes\"));\n\t\t\tif (!(dayTwix.engulfs(blockTwix))) {\n\t\t\t\tconsole.log(\"fail\");\n\t\t\t\tret =  \"dateOutOfBounds\";\n\t\t\t}\n\t\t}\n\n\t});\n\treturn ret;\n};\nunusualDays = new Meteor.Collection(\"unusualDays\");\nunusualDays.attachSchema( new SimpleSchema({\n\tdate: {\n\t\ttype: Date,\n\t\tlabel: \"Date\",\n\t\tindex: 1,\n\t\tautoValue: function(isInsert) {\n\t\t\tif(!isInsert) {\n\t\t\t\tthis.unset();\n\t\t\t}\n\t\t}\n\t},\n\tproviderName: {\n\t\ttype: String,\n\t\tlabel: \"Provider Name\"\n\t\t// custom:\n\t\t//TODO: Make sure provider Name exists\n\t},\n\tnotes: {\n\t\ttype: String,\n\t\tlabel: \"Notes\",\n\t\toptional: true\n\t},\n\tstartTime: {\n\t\ttype: Number,\n\t\tlabel: \"Start Time\",\n\t\tmin:1,\n\t\tmax:23,\n\t\tcustom: function() {\n\t\t\tif (this.isSet) {\n\t\t\t\treturn checkBounds(this);\n\t\t\t}\n\t\t}\n\t},\n\tendTime: {\n\t\ttype: Number,\n\t\tlabel: \"End Time (24h time)\",\n\t\tautoValue: function() {\n\t\t\tif(!this.isSet && this.isInsert && this.field(\"providerName\").isSet) {\n\t\t\t\treturn providers.findOne({name: this.field(\"providerName\").value})[\"endTime\"];\n\t\t\t}\n\t\t},\n\t\tmin:2,\n\t\tmax:24,\n\t\tcustom: function(){\n\t\t\tif (this.isSet) {\n\t\t\t\tif (this.field(\"startTime\").value >= this.value){\n\t\t\t\t\treturn \"startAfterEnd\"\n\t\t\t\t}\n\t\t\t\treturn checkBounds(this);\n\t\t\t}\n\n\t\t}\n\t},\n\tappointmentLength: {\n\t\ttype: Number,\n\t\tlabel: \"Appointment Length\",\n\t\tmin: 1,\n\t\tmax: 60,\n\t\tcustom: function(){\n\t\t\tif (this.value % 5 !== 0){\n\t\t\t\treturn \"mod5\";\n\t\t\t}\n\t\t},\n\t\tautoValue: function() {\n\t\t\tif(this.isInsert && this.field(\"providerName\").isSet) {\n\t\t\t\treturn providers.findOne({name: this.field(\"providerName\").value})[\"appointmentLength\"];\n\t\t\t}\n\t\t}\n\t}\n}));\nunusualDays.simpleSchema().messages({\n\tmod5: \"[value] must be a multiple of 5.\",\n\tstartAfterEnd:\"Start Time must be before End Time.\",\n\tendBeforeStart:\"End time must be after Before time.\",\n\tdateOutOfBounds: \"An Appointment or Blockout would be put out of bounds by this change.\"\n});\n"]}},{"type":"js","data":"(function(){function dayDelta(date) {\n\tvar diff = moment(date).diff(moment().startOf('day'), \"days\");\n\tif (diff===1){\n\t\treturn \" tomorrow\";\n\t}\n\telse if (diff===-1) {\n\t\treturn \" yesterday\";\n\t}\n\telse if (diff === 0)\n\t{\n\t\treturn \" today\"\n\t}\n\telse if (diff > 1)\n\t{\n\t\treturn \" in \" +Math.abs(diff)+ \" days\"\n\t}\n\telse\n\t{\n\t\treturn \" \"+Math.abs(diff)+\" days ago\"\n\t}\n}\nTemplate.insertAppointmentForm.events({\n\t'click #closeBookingEditor': function() {\n\t\t$('td.rowContent.bg-success').removeClass('bg-success');\n\t\tgoHome();\n\t},\n\t'click #deleteAppointment': function() {\n\t\tif (confirm(\"Are you sure you want to delete this appointment?\")) {\n\t\t\tappointmentList.remove(Session.get(\"currentlyEditingDoc\"));\n\t\t\tgoHome();\n\t\t}\n\t}\n\n});\nTemplate.insertAppointmentForm.rendered = function() {\n\tconsole.log(\"appointment edit rendered\");\n\t\n\t$('#datetimepicker').on(\"dp.change\", function (e) {\n\t\tif (Router.current().route.getName() === \"newAppointment\" ||\n\t\t\tRouter.current().route.getName() === \"bookingTable\") {\n\t\t\tnewAppointment(e.date.format(\"h:mm A\"));\n\t\t}\n\t});\n};\nTemplate.insertAppointmentForm.helpers({\n\tappointmentList: appointmentList,\n\t\n\t\n\tsavebuttontext: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\treturn \"Book my Cab\"\n\t\t} else {\n\t\t\treturn \"Update Booking Details\"\n\t\t}\n\t},\n\tsessionDate: function(){return Session.get(\"date\")},\n\tlength: function() {\n\t\tvar lol = Session.get(\"newTime\");\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\t\ttry {return provObject.appointmentLength}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.log(\"looking for appointment length too early.\");\n\t\t\t\treturn 15;\n\t\t\t}//this error doesn't matter, it means the unusualDays\n\t\t\t// and Providers collections aren't filled yet.\n\t\t\t//will be fixed for real when iron router is used for appointment editing\n\t\t\t///creation\n\t\t} else {//update, grab length from current doc\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).length;\n\t\t}\n\t},\n\tcurrentType: function() {\n\t\tif(Session.get(\"formForInsert\")) {\n\t\t\treturn \"insert\"\n\t\t}\n\t\telse {\n\t\t\treturn \"update\"\n\t\t}\n\t},\n\ttimePreset: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tif (Session.get('newTime') && typeof Session.get('newTime') !== \"undefined\") {\n\t\t\t\treturn Session.get(\"newTime\");\n\t\t\t} else {\n\t\t\t\treturn \"12:00 PM\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).date;\n\t\t}\n\t},\n\tcurrentDoc: function() {return appointmentList.findOne(Session.get(\"currentlyEditingDoc\"))},\n\tdeleteButtonClass: function() {if (Session.get(\"formForInsert\")) {\n\t\treturn \"hidden\";\n\t}}\n\n});\nAutoForm.hooks({\n\tinsertAppointmentFormInner: {\n\t\tbeginSubmit: function(fieldId, template) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tthealert[0].innerHTML = \"Submitting...\";\n\t\t\tthealert.show(\"fast\");\n\t\t\tthealert.attr(\"disabled\", true);\n\t\t},\n\n\t\tonSuccess: function(formType, result) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tif(formType === \"update\") {\n\t\t\t\tthealert[0].innerHTML = \"Appointment Successfully Edited.\";\n\t\t\t} else {\n\t\t\t\tthealert[0].innerHTML = \"New Appointment Created.\";\n\t\t\t}\n\t\t\t//thealert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\t//thealert.addClass('alert-success');\n\t\t\t//thealert.removeClass('bg-success');\n\t\t\t//this.resetForm();\n\t\t\t//closeTimeout = Meteor.setTimeout(function() {\n\t\t\t//\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\tSession.set(\"changedAppointmentID\", result);\n\t\t\tgoHome();\n\t\t\t//}, 3000);\n\t\t},\n\t\t//docToForm: function(doc){\n\t\t//\tconsole.log('running docToForm on route: '+Router.current().route.getName());\n\t\t//\tif (doc.date instanceof Date) {\n\t\t//\t\tdoc.time = moment(doc.date).format(\"h:mm A\");\n\t\t//\t}\n\t\t//\treturn doc;\n\t\t//},\n\t\tformToDoc: function(doc) {\n\t\t\tdoc.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tformToModifier: function(doc) {\n\t\t\tdoc.$set.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tonError: function(formtype, error) {\n\t\t\t//console.log('running onError!');\n\t\t\t$('#saveAppointChanges').attr(\"disabled\", false);\n\t\t\tvar alert = $('#insertSuccessAlert');\n\t\t\talert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\talert.addClass('alert-danger');\n\t\t\talert[0].innerHTML = \"something went wrong!\";\n\t\t\talert.show(\"fast\");\n\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\t}, 3000);\n\t\t},\n\t\tafter: {\n\t\t\tinsert: function(error, result) {//TODO: When appointment is made, use the data-id var\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Insert Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Insert Result:\", result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: function(error, result) {\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"update Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"update Result:\", result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n}).call(this);\n","servePath":"/client/views/CabBooking/appointmentEdit.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/appointmentEdit.js"],"names":[],"mappings":"yfile":"/client/views/CabBooking/appointmentEdit.js","sourcesContent":["function dayDelta(date) {\n\tvar diff = moment(date).diff(moment().startOf('day'), \"days\");\n\tif (diff===1){\n\t\treturn \" tomorrow\";\n\t}\n\telse if (diff===-1) {\n\t\treturn \" yesterday\";\n\t}\n\telse if (diff === 0)\n\t{\n\t\treturn \" today\"\n\t}\n\telse if (diff > 1)\n\t{\n\t\treturn \" in \" +Math.abs(diff)+ \" days\"\n\t}\n\telse\n\t{\n\t\treturn \" \"+Math.abs(diff)+\" days ago\"\n\t}\n}\nTemplate.insertAppointmentForm.events({\n\t'click #closeBookingEditor': function() {\n\t\t$('td.rowContent.bg-success').removeClass('bg-success');\n\t\tgoHome();\n\t},\n\t'click #deleteAppointment': function() {\n\t\tif (confirm(\"Are you sure you want to delete this appointment?\")) {\n\t\t\tappointmentList.remove(Session.get(\"currentlyEditingDoc\"));\n\t\t\tgoHome();\n\t\t}\n\t}\n\n});\nTemplate.insertAppointmentForm.rendered = function() {\n\tconsole.log(\"appointment edit rendered\");\n\t\n\t$('#datetimepicker').on(\"dp.change\", function (e) {\n\t\tif (Router.current().route.getName() === \"newAppointment\" ||\n\t\t\tRouter.current().route.getName() === \"bookingTable\") {\n\t\t\tnewAppointment(e.date.format(\"h:mm A\"));\n\t\t}\n\t});\n};\nTemplate.insertAppointmentForm.helpers({\n\tappointmentList: appointmentList,\n\t\n\t\n\tsavebuttontext: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\treturn \"Book my Cab\"\n\t\t} else {\n\t\t\treturn \"Update Booking Details\"\n\t\t}\n\t},\n\tsessionDate: function(){return Session.get(\"date\")},\n\tlength: function() {\n\t\tvar lol = Session.get(\"newTime\");\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\t\ttry {return provObject.appointmentLength}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.log(\"looking for appointment length too early.\");\n\t\t\t\treturn 15;\n\t\t\t}//this error doesn't matter, it means the unusualDays\n\t\t\t// and Providers collections aren't filled yet.\n\t\t\t//will be fixed for real when iron router is used for appointment editing\n\t\t\t///creation\n\t\t} else {//update, grab length from current doc\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).length;\n\t\t}\n\t},\n\tcurrentType: function() {\n\t\tif(Session.get(\"formForInsert\")) {\n\t\t\treturn \"insert\"\n\t\t}\n\t\telse {\n\t\t\treturn \"update\"\n\t\t}\n\t},\n\ttimePreset: function() {\n\t\tif (Session.get(\"formForInsert\")) {\n\t\t\tif (Session.get('newTime') && typeof Session.get('newTime') !== \"undefined\") {\n\t\t\t\treturn Session.get(\"newTime\");\n\t\t\t} else {\n\t\t\t\treturn \"12:00 PM\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn appointmentList.findOne(Session.get(\"currentlyEditingDoc\")).date;\n\t\t}\n\t},\n\tcurrentDoc: function() {return appointmentList.findOne(Session.get(\"currentlyEditingDoc\"))},\n\tdeleteButtonClass: function() {if (Session.get(\"formForInsert\")) {\n\t\treturn \"hidden\";\n\t}}\n\n});\nAutoForm.hooks({\n\tinsertAppointmentFormInner: {\n\t\tbeginSubmit: function(fieldId, template) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tthealert[0].innerHTML = \"Submitting...\";\n\t\t\tthealert.show(\"fast\");\n\t\t\tthealert.attr(\"disabled\", true);\n\t\t},\n\n\t\tonSuccess: function(formType, result) {\n\t\t\tvar thealert = $('#insertSuccessAlert');\n\t\t\tif(formType === \"update\") {\n\t\t\t\tthealert[0].innerHTML = \"Appointment Successfully Edited.\";\n\t\t\t} else {\n\t\t\t\tthealert[0].innerHTML = \"New Appointment Created.\";\n\t\t\t}\n\t\t\t//thealert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\t//thealert.addClass('alert-success');\n\t\t\t//thealert.removeClass('bg-success');\n\t\t\t//this.resetForm();\n\t\t\t//closeTimeout = Meteor.setTimeout(function() {\n\t\t\t//\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\tSession.set(\"changedAppointmentID\", result);\n\t\t\tgoHome();\n\t\t\t//}, 3000);\n\t\t},\n\t\t//docToForm: function(doc){\n\t\t//\tconsole.log('running docToForm on route: '+Router.current().route.getName());\n\t\t//\tif (doc.date instanceof Date) {\n\t\t//\t\tdoc.time = moment(doc.date).format(\"h:mm A\");\n\t\t//\t}\n\t\t//\treturn doc;\n\t\t//},\n\t\tformToDoc: function(doc) {\n\t\t\tdoc.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tformToModifier: function(doc) {\n\t\t\tdoc.$set.providerName = Session.get(\"selectedProviderName\");\n\t\t\treturn doc;\n\t\t},\n\t\tonError: function(formtype, error) {\n\t\t\t//console.log('running onError!');\n\t\t\t$('#saveAppointChanges').attr(\"disabled\", false);\n\t\t\tvar alert = $('#insertSuccessAlert');\n\t\t\talert.removeClass('alert-danger alert-info alert-info alert-success');\n\t\t\talert.addClass('alert-danger');\n\t\t\talert[0].innerHTML = \"something went wrong!\";\n\t\t\talert.show(\"fast\");\n\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t$('#insertSuccessAlert').hide(\"slow\");\n\t\t\t}, 3000);\n\t\t},\n\t\tafter: {\n\t\t\tinsert: function(error, result) {//TODO: When appointment is made, use the data-id var\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"Insert Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Insert Result:\", result);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: function(error, result) {\n\t\t\t\t//console.log('running after insert!');\n\t\t\t\t//to find it in the appointment list and bounce it!\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.log(\"update Error:\", error);\n\t\t\t\t\t//$(\"#insertSuccessAlert\").alert();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"update Result:\", result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});"]}},{"type":"js","data":"(function(){Template.appointmentItem.helpers({\n\tappointmentStyle: function() {\n\t\treturn buildTableItemStyle(this);\n\t},\n\tinbetween: function() {\n\t\treturn inBetween(this);\n\t},\n\titemHighlightClass: function() {\n\t\treturn highlightItemHelper(this);\n\t},\n\ttime: function() {\n\t\treturn moment(this.date).format(\"h:mm A\");\n\t}\n});\n\n}).call(this);\n","servePath":"/client/views/CabBooking/appointmentItem.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/appointmentItem.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/CabBooking/appointmentItem.js","sourcesContent":["Template.appointmentItem.helpers({\n\tappointmentStyle: function() {\n\t\treturn buildTableItemStyle(this);\n\t},\n\tinbetween: function() {\n\t\treturn inBetween(this);\n\t},\n\titemHighlightClass: function() {\n\t\treturn highlightItemHelper(this);\n\t},\n\ttime: function() {\n\t\treturn moment(this.date).format(\"h:mm A\");\n\t}\n});\n"]}},{"type":"js","data":"(function(){Template.bookingTable.helpers({\n\tunusualDays: function() {\n\t\treturn unusualDays.findOne({date: Session.get(\"date\"), providerName: Session.get(\"selectedProviderName\")});\n\t},\n\tday: function() {\n\t\tvar momentobj = moment(Session.get(\"date\"));\n\t\tvar ret = momentobj.format(\"dddd, MMMM Do GGGG\");\n\t\treturn ret + \" -\"+ dayDelta(Session.get(\"date\"));\n\t},\n\tbookingTableWrapperStyle: function() {\n\t\tif (Router.current().route.getName() !== \"printout\") {\n\t\t\treturn {style: \"height:700px; overflow-y:auto;\"}\n\t\t}\n\t},\n\tnotPrintout: function() {\n\t\treturn Router.current().route.getName() !== \"printout\";\n\t},\n\ttimes: function(){\n\t\tif (Roles.userIsInRole(Meteor.userId(), \"provider\")) {\n\t\t\tconsole.log(\"user is provider, setting selected provider name\");\n\t\t\tSession.set(\"selectedProviderName\", Meteor.user().providerName);\n\t\t}\n\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\tif (!provObject) {\n\t\t\tconsole.log(\"provider not yet available, bailing out\");\n\t\t\treturn;\n\t\t}\n\t\t// console.log(provObject);\n\t\tvar dateCounter = moment().startOf('day').hours(provObject.startTime);\n\t\tvar dateTarget = moment().startOf('day').hours(provObject.endTime);\n\t\tvar ret = [];\n\t\tvar theTime;\n\t\twhile(dateTarget.diff(dateCounter) > 0)\n\t\t{\n\t\t\ttheTime = dateCounter.format(\"h:mm A\");\n\t\t\tret.push({time: theTime, rowTimeId:theTime});\n\t\t\tdateCounter.add(provObject.appointmentLength, \"minutes\");\n\t\t}\n\t\tvar finalTime = dateCounter.format(\"h:mm A\");\n\t\t// console.log(JSON.stringify({time: finalTime}));\n\t\tret.push({time: finalTime, rowTimeId:finalTime});\n\t\treturn ret;\n\t},\n\n\tblockouts: function() {\n\t\treturn getBlockouts(Session.get(\"selectedProviderName\"), Session.get('date'));\n\t},\n\tappointments: function() {\n\t\tvar theDate = Session.get(\"date\");\n\t\tstartDate = moment(theDate).startOf(\"day\").toDate();\n\t\tendDate = moment(theDate).endOf(\"day\").toDate();\n\t\t// console.log(JSON.stringify({date: {$gte: startDate, $lt: endDate}}));\n\t\tqueryPointer = appointmentList.find({date: {$gte: startDate, $lt: endDate},\n\t\t\tproviderName: Session.get(\"selectedProviderName\")});\n\t\treturn queryPointer;\n\t},\n\tproviderNames: function() {\n\t\treturn providers.find({}, {fields: {name: 1}})\n\t},\n\tselected: function() {\n\t\tif(Session.get(\"selectedProviderName\") === this.name) {\n\t\t\treturn \"active\";\n\t\t}\n\t},\n\ttodaysUnusualTimes: function () {\n\t\treturn unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})\n\t},\n\n\tbuttonStyle: function() {\n\t\t\n\t\tif (unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})){\n\t\t\treturn \"display: none;\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t},\n\tnotes: function () {\n\t\ttry{\n\t\t\treturn unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")}).notes\n\t\t} catch(e) {/*fails when there is no unusualDay for today.*/}\n\t},\n\tnoneSelected: function() {\n\t\treturn Session.get('selectedProviderName') === undefined || !Session.get('selectedProviderName')\n\n\t}\n\n});\n\n\n\nTemplate.bookingTable.events({\n\t'click .providerTab': function(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log($(event.currentTarget).data(\"name\"));\n\t\tchangeParams({providerName: $(event.currentTarget).data(\"name\")});\n\t},\n\t'dblclick .appointmentItem': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tRouter.go('editAppointment', {id: $(event.currentTarget).data(\"id\")});\n\t},\n\t'dblclick .blockoutItem': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\ttry{\n\t\t\tif($(event.currentTarget).data(\"id\")) {\n\t\t\t\tRouter.go('editBlockout', {id: $(event.currentTarget).data(\"id\")});\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tif(confirm('This is a repeating blockout, and must be edited from the providers menu. Go there?')){\n\t\t\tRouter.go('/providers');\n\t\t}\n\n\t},\n\t'click #customTimesButton': function(event) {\n\t\tvar provObject = providers.findOne({name: Session.get(\"selectedProviderName\")});\n\t\tunusualDays.insert({date: Session.get('date'),\n\t\t\tproviderName: Session.get(\"selectedProviderName\"),\n\t\t\tstartTime: provObject.startTime,\n\t\t\tendTime: provObject.endTime,\n\t\t\tappointmentLength: provObject.appointmentLength});\n\t},\n\t'click #deleteCustomTimes': function(event) {\n\t\tunusualDays.remove(unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})._id);\n\t},\n\t'dblclick td.rowContent': function(event) {\n\t\tif (Router.current().route.getName() === \"newBlockoutForm\") {\n\t\t\tnewAppointment(event.currentTarget.id, true);\n\t\t} else {\n\t\t\tnewAppointment(event.currentTarget.id);\n\t\t}\n\t}\n});\n\nTemplate.bookingTable.created = function() {\n\tSession.set('timesRendered', false);\n};\n\nTemplate.bookingTable.rendered = function() {\n\t//console.log(\"rerendering\");\n\t//rerenderDep.changed();\n\tfillJqueryCache();\n\tSession.set('timesRendered', true);\n\tTracker.autorun(function() {\n\t\t// /appointToScrollTo\n\t\t// var pos = $('div[data-id=\"'+Session.get(\"currentlyEditingDoc\")+'\"]')[0].offsetTop\n\t\tvar pos = Session.get(\"scrollToPoint\");\n\t\tif (pos === null || typeof pos === \"undefined\") {return;}\n\t\tconsole.log(\"Scrolling to :\" + pos);\n\t\t$(\"#bookingTableWrapper\").animate({\n\t\t\tscrollTop: pos,\n\t\t\tscrollLeft: 0\n\t\t});\n\t\tTracker.nonreactive(function() {\n\t\t\tSession.set(\"scrollToPoint\", null);\n\t\t})\n\t\t\n\t})\n};\n\nTemplate.bookingTable.onDestroyed(function() {\n\tjquerycache = {}; //clear the jquery cache\n});\n\n\n\nTemplate.timeRow.helpers({\n\trowHighlightClass: function() {\n\t\tif (moment(Session.get(\"newTime\"), \"hh:mm A\").format(\"h:mm A\") == this.time && Session.get(\"formForInsert\") === true) {\n\t\t\t//console.log(\"highlighting row \"+ Session.get(\"newTime\"));\n\t\t\treturn \"bg-success\";\n\t\t}\n\t\t\n\t}\n\n});\nTemplate.timeRow.rendered = function(){\n\tif(Session.equals(\"newTime\", this.data.time)) {\n\t\t//console.log(\"Newtime is : \"+ Session.get(\"newTime\"));\n\t\tSession.set(\"scrollToPoint\", this.firstNode.offsetTop);\n\t}\n};\n\n\n}).call(this);\n","servePath":"/client/views/CabBooking/bookingTable.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/bookingTable.js"],"names":[],"mappings":"yfile":"/client/views/CabBooking/bookingTable.js","sourcesContent":["Template.bookingTable.helpers({\n\tunusualDays: function() {\n\t\treturn unusualDays.findOne({date: Session.get(\"date\"), providerName: Session.get(\"selectedProviderName\")});\n\t},\n\tday: function() {\n\t\tvar momentobj = moment(Session.get(\"date\"));\n\t\tvar ret = momentobj.format(\"dddd, MMMM Do GGGG\");\n\t\treturn ret + \" -\"+ dayDelta(Session.get(\"date\"));\n\t},\n\tbookingTableWrapperStyle: function() {\n\t\tif (Router.current().route.getName() !== \"printout\") {\n\t\t\treturn {style: \"height:700px; overflow-y:auto;\"}\n\t\t}\n\t},\n\tnotPrintout: function() {\n\t\treturn Router.current().route.getName() !== \"printout\";\n\t},\n\ttimes: function(){\n\t\tif (Roles.userIsInRole(Meteor.userId(), \"provider\")) {\n\t\t\tconsole.log(\"user is provider, setting selected provider name\");\n\t\t\tSession.set(\"selectedProviderName\", Meteor.user().providerName);\n\t\t}\n\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\tif (!provObject) {\n\t\t\tconsole.log(\"provider not yet available, bailing out\");\n\t\t\treturn;\n\t\t}\n\t\t// console.log(provObject);\n\t\tvar dateCounter = moment().startOf('day').hours(provObject.startTime);\n\t\tvar dateTarget = moment().startOf('day').hours(provObject.endTime);\n\t\tvar ret = [];\n\t\tvar theTime;\n\t\twhile(dateTarget.diff(dateCounter) > 0)\n\t\t{\n\t\t\ttheTime = dateCounter.format(\"h:mm A\");\n\t\t\tret.push({time: theTime, rowTimeId:theTime});\n\t\t\tdateCounter.add(provObject.appointmentLength, \"minutes\");\n\t\t}\n\t\tvar finalTime = dateCounter.format(\"h:mm A\");\n\t\t// console.log(JSON.stringify({time: finalTime}));\n\t\tret.push({time: finalTime, rowTimeId:finalTime});\n\t\treturn ret;\n\t},\n\n\tblockouts: function() {\n\t\treturn getBlockouts(Session.get(\"selectedProviderName\"), Session.get('date'));\n\t},\n\tappointments: function() {\n\t\tvar theDate = Session.get(\"date\");\n\t\tstartDate = moment(theDate).startOf(\"day\").toDate();\n\t\tendDate = moment(theDate).endOf(\"day\").toDate();\n\t\t// console.log(JSON.stringify({date: {$gte: startDate, $lt: endDate}}));\n\t\tqueryPointer = appointmentList.find({date: {$gte: startDate, $lt: endDate},\n\t\t\tproviderName: Session.get(\"selectedProviderName\")});\n\t\treturn queryPointer;\n\t},\n\tproviderNames: function() {\n\t\treturn providers.find({}, {fields: {name: 1}})\n\t},\n\tselected: function() {\n\t\tif(Session.get(\"selectedProviderName\") === this.name) {\n\t\t\treturn \"active\";\n\t\t}\n\t},\n\ttodaysUnusualTimes: function () {\n\t\treturn unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})\n\t},\n\n\tbuttonStyle: function() {\n\t\t\n\t\tif (unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})){\n\t\t\treturn \"display: none;\";\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t},\n\tnotes: function () {\n\t\ttry{\n\t\t\treturn unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")}).notes\n\t\t} catch(e) {/*fails when there is no unusualDay for today.*/}\n\t},\n\tnoneSelected: function() {\n\t\treturn Session.get('selectedProviderName') === undefined || !Session.get('selectedProviderName')\n\n\t}\n\n});\n\n\n\nTemplate.bookingTable.events({\n\t'click .providerTab': function(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log($(event.currentTarget).data(\"name\"));\n\t\tchangeParams({providerName: $(event.currentTarget).data(\"name\")});\n\t},\n\t'dblclick .appointmentItem': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tRouter.go('editAppointment', {id: $(event.currentTarget).data(\"id\")});\n\t},\n\t'dblclick .blockoutItem': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\ttry{\n\t\t\tif($(event.currentTarget).data(\"id\")) {\n\t\t\t\tRouter.go('editBlockout', {id: $(event.currentTarget).data(\"id\")});\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tif(confirm('This is a repeating blockout, and must be edited from the providers menu. Go there?')){\n\t\t\tRouter.go('/providers');\n\t\t}\n\n\t},\n\t'click #customTimesButton': function(event) {\n\t\tvar provObject = providers.findOne({name: Session.get(\"selectedProviderName\")});\n\t\tunusualDays.insert({date: Session.get('date'),\n\t\t\tproviderName: Session.get(\"selectedProviderName\"),\n\t\t\tstartTime: provObject.startTime,\n\t\t\tendTime: provObject.endTime,\n\t\t\tappointmentLength: provObject.appointmentLength});\n\t},\n\t'click #deleteCustomTimes': function(event) {\n\t\tunusualDays.remove(unusualDays.findOne({date:Session.get('date'), providerName: Session.get(\"selectedProviderName\")})._id);\n\t},\n\t'dblclick td.rowContent': function(event) {\n\t\tif (Router.current().route.getName() === \"newBlockoutForm\") {\n\t\t\tnewAppointment(event.currentTarget.id, true);\n\t\t} else {\n\t\t\tnewAppointment(event.currentTarget.id);\n\t\t}\n\t}\n});\n\nTemplate.bookingTable.created = function() {\n\tSession.set('timesRendered', false);\n};\n\nTemplate.bookingTable.rendered = function() {\n\t//console.log(\"rerendering\");\n\t//rerenderDep.changed();\n\tfillJqueryCache();\n\tSession.set('timesRendered', true);\n\tTracker.autorun(function() {\n\t\t// /appointToScrollTo\n\t\t// var pos = $('div[data-id=\"'+Session.get(\"currentlyEditingDoc\")+'\"]')[0].offsetTop\n\t\tvar pos = Session.get(\"scrollToPoint\");\n\t\tif (pos === null || typeof pos === \"undefined\") {return;}\n\t\tconsole.log(\"Scrolling to :\" + pos);\n\t\t$(\"#bookingTableWrapper\").animate({\n\t\t\tscrollTop: pos,\n\t\t\tscrollLeft: 0\n\t\t});\n\t\tTracker.nonreactive(function() {\n\t\t\tSession.set(\"scrollToPoint\", null);\n\t\t})\n\t\t\n\t})\n};\n\nTemplate.bookingTable.onDestroyed(function() {\n\tjquerycache = {}; //clear the jquery cache\n});\n\n\n\nTemplate.timeRow.helpers({\n\trowHighlightClass: function() {\n\t\tif (moment(Session.get(\"newTime\"), \"hh:mm A\").format(\"h:mm A\") == this.time && Session.get(\"formForInsert\") === true) {\n\t\t\t//console.log(\"highlighting row \"+ Session.get(\"newTime\"));\n\t\t\treturn \"bg-success\";\n\t\t}\n\t\t\n\t}\n\n});\nTemplate.timeRow.rendered = function(){\n\tif(Session.equals(\"newTime\", this.data.time)) {\n\t\t//console.log(\"Newtime is : \"+ Session.get(\"newTime\"));\n\t\tSession.set(\"scrollToPoint\", this.firstNode.offsetTop);\n\t}\n};\n\n"]}},{"type":"js","data":"(function(){jquerycache = {};//cache the jquery calls because they're slow. do em once per route, clearing on every new route.\nfillJqueryCache = function() {\n\tSession.get(\"date\");\n\tSession.get('selectedProviderName');\n\t//console.log('filling the jquery cache');\n\tjquerycache.theadth = $(\"thead th\").css(\"height\");//table header height\n\tjquerycache.rowHeight = $(\".timeRow\")[1].clientHeight;//the first row is different height between browsers.\n\tjquerycache.headerWidth = parseInt($(\".rowHeader\").css(\"width\"));\n\tjquerycache.tableItemHeight = parseInt($('.tableItemData').css('height'));\n\t// see https://github.com/twbs/bootstrap/issues/16149\n\n};\n\nbuildTableItemStyle = function(thisobj) {//centralizing this function improves DRY and\n\t//allows us to avoid doing any of this expensive stuff until the times table is rendered\n\tif (!Session.get('timesRendered')) {\n\t\treturn 0;\n\t}\n\tvar height = tableItemHeight(thisobj);\n\treturn \"style=\\\"\" +\n\t\t\"width:auto;max-height:\" +height+\n\t\t\";height:\" + height +\n\t\t\";left:\" + tableItemLeft(thisobj) +\n\t\t\";top:\" + tableItemTop(thisobj) +\n\t\t\";\\\"\"\n};\n\nhighlightItemHelper = function(thisobj) {\n\tif(typeof Session.get('currentlyEditingDoc') !== \"undefined\"\n\t\t&& Session.get(\"currentlyEditingDoc\") === thisobj._id) {\n\n\t\treturn \"being-edited\";\n\t}\n};\n\ninBetween = function(thisobj) {\n\tif (!Session.get('timesRendered')) {\n\t\treturn 0;\n\t}\n\tvar provObj = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\tif (((jquerycache.rowHeight/provObj.appointmentLength)*thisobj.length) >= (jquerycache.tableItemHeight * 4)) {\n\t\treturn '<br/>'\n\t}\n\telse {\n\t\treturn \" - \"\n\t}\n};\n\ntableItemHeight = function(thisobj) {\n\t\tif (thisobj.length == Session.get(\"appntlength\"))\n\t\t{\n\t\t\treturn jquerycache.rowHeight +\"px\";\n\t\t}\n\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\tvar defaultHeight = jquerycache.rowHeight;\n\t\tvar pxPerMinute = defaultHeight/provObject.appointmentLength;\n\t\treturn Math.ceil(pxPerMinute * thisobj.length) + \"px\";\n};\ntableItemLeft = function(thisobj) {\n\treturn jquerycache.headerWidth + \"px\";\n};\ntableItemTop = function(thisobj) {\n\tif (!thisobj.date) {//this is a blockout\n\t\tvar datestring = moment(Session.get(\"date\")).tz(\"Pacific/Auckland\").format(\"YYYY-MM-DD \") + thisobj.time;\n\t\tvar thedate = moment(datestring, \"YYYY-MM-DD hh:mm A\").toDate();\n\t\t// console.log(thedate);\n\t} else {\n\t\tthedate = thisobj.date\n\t}\n\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\n\tvar startTime = Session.get(\"date\");\n\tstartTime.setHours(provObject.startTime);\n\t//numFromTop is the number of minutes from the beginning of the day this item is\n\tvar numFromTop = (thedate.getTime() -\n\t\t\t\t  startTime.getTime())/1000/60;\n\n\n\tif(numFromTop/provObject.appointmentLength === 0){//special case for first item of the day.\n\t\treturn jquerycache.theadth;\n\t}\n\telse\n\t{\n\t\tvar untouchedAppntsFromTop = (numFromTop/provObject.appointmentLength)+1;\n\n\t\tvar appntsFromTop = Math.floor(untouchedAppntsFromTop);\n\t\tvar pixelsFromTop = jquerycache.rowHeight*appntsFromTop;\n\n\t\tif (untouchedAppntsFromTop % 1 !== 0){\n//\t\t\t//if the appnt doesn't align with standard boundries - i.e, 15 mins\n\t\t\tpixelsFromTop += jquerycache.rowHeight *\n\t\t\t(untouchedAppntsFromTop % 1);\n\t\t}\n\t\t//console.log(\"Editing: \"+Session.get(\"currentlyEditingDoc\"))\n\t\tif(Session.equals(\"currentlyEditingDoc\", thisobj._id) && thisobj._id)/*if _id is null we are a blockout*/ {\n\n\t\t\tSession.set(\"scrollToPoint\", pixelsFromTop);\n\t\t} else if (Session.equals(\"changedAppointmentID\", thisobj._id)\n\t\t\t\t&& typeof Session.get(\"changedAppointmentID\") !== \"undefined\") {\n\t\t\tSession.set(\"scrollToPoint\", pixelsFromTop);\n\t\t\tSession.set(\"changedAppointmentID\", null);\n\t\t}\n\t\treturn pixelsFromTop + \"px\";\n\t}\n};\n}).call(this);\n","servePath":"/client/views/CabBooking/tableItemHelpers.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/CabBooking/tableItemHelpers.js"],"names":[],"mappings":"yfile":"/client/views/CabBooking/tableItemHelpers.js","sourcesContent":["jquerycache = {};//cache the jquery calls because they're slow. do em once per route, clearing on every new route.\nfillJqueryCache = function() {\n\tSession.get(\"date\");\n\tSession.get('selectedProviderName');\n\t//console.log('filling the jquery cache');\n\tjquerycache.theadth = $(\"thead th\").css(\"height\");//table header height\n\tjquerycache.rowHeight = $(\".timeRow\")[1].clientHeight;//the first row is different height between browsers.\n\tjquerycache.headerWidth = parseInt($(\".rowHeader\").css(\"width\"));\n\tjquerycache.tableItemHeight = parseInt($('.tableItemData').css('height'));\n\t// see https://github.com/twbs/bootstrap/issues/16149\n\n};\n\nbuildTableItemStyle = function(thisobj) {//centralizing this function improves DRY and\n\t//allows us to avoid doing any of this expensive stuff until the times table is rendered\n\tif (!Session.get('timesRendered')) {\n\t\treturn 0;\n\t}\n\tvar height = tableItemHeight(thisobj);\n\treturn \"style=\\\"\" +\n\t\t\"width:auto;max-height:\" +height+\n\t\t\";height:\" + height +\n\t\t\";left:\" + tableItemLeft(thisobj) +\n\t\t\";top:\" + tableItemTop(thisobj) +\n\t\t\";\\\"\"\n};\n\nhighlightItemHelper = function(thisobj) {\n\tif(typeof Session.get('currentlyEditingDoc') !== \"undefined\"\n\t\t&& Session.get(\"currentlyEditingDoc\") === thisobj._id) {\n\n\t\treturn \"being-edited\";\n\t}\n};\n\ninBetween = function(thisobj) {\n\tif (!Session.get('timesRendered')) {\n\t\treturn 0;\n\t}\n\tvar provObj = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\tif (((jquerycache.rowHeight/provObj.appointmentLength)*thisobj.length) >= (jquerycache.tableItemHeight * 4)) {\n\t\treturn '<br/>'\n\t}\n\telse {\n\t\treturn \" - \"\n\t}\n};\n\ntableItemHeight = function(thisobj) {\n\t\tif (thisobj.length == Session.get(\"appntlength\"))\n\t\t{\n\t\t\treturn jquerycache.rowHeight +\"px\";\n\t\t}\n\t\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\t\tvar defaultHeight = jquerycache.rowHeight;\n\t\tvar pxPerMinute = defaultHeight/provObject.appointmentLength;\n\t\treturn Math.ceil(pxPerMinute * thisobj.length) + \"px\";\n};\ntableItemLeft = function(thisobj) {\n\treturn jquerycache.headerWidth + \"px\";\n};\ntableItemTop = function(thisobj) {\n\tif (!thisobj.date) {//this is a blockout\n\t\tvar datestring = moment(Session.get(\"date\")).tz(\"Pacific/Auckland\").format(\"YYYY-MM-DD \") + thisobj.time;\n\t\tvar thedate = moment(datestring, \"YYYY-MM-DD hh:mm A\").toDate();\n\t\t// console.log(thedate);\n\t} else {\n\t\tthedate = thisobj.date\n\t}\n\tvar provObject = getProvObject(Session.get(\"date\"), Session.get('selectedProviderName'));\n\n\tvar startTime = Session.get(\"date\");\n\tstartTime.setHours(provObject.startTime);\n\t//numFromTop is the number of minutes from the beginning of the day this item is\n\tvar numFromTop = (thedate.getTime() -\n\t\t\t\t  startTime.getTime())/1000/60;\n\n\n\tif(numFromTop/provObject.appointmentLength === 0){//special case for first item of the day.\n\t\treturn jquerycache.theadth;\n\t}\n\telse\n\t{\n\t\tvar untouchedAppntsFromTop = (numFromTop/provObject.appointmentLength)+1;\n\n\t\tvar appntsFromTop = Math.floor(untouchedAppntsFromTop);\n\t\tvar pixelsFromTop = jquerycache.rowHeight*appntsFromTop;\n\n\t\tif (untouchedAppntsFromTop % 1 !== 0){\n//\t\t\t//if the appnt doesn't align with standard boundries - i.e, 15 mins\n\t\t\tpixelsFromTop += jquerycache.rowHeight *\n\t\t\t(untouchedAppntsFromTop % 1);\n\t\t}\n\t\t//console.log(\"Editing: \"+Session.get(\"currentlyEditingDoc\"))\n\t\tif(Session.equals(\"currentlyEditingDoc\", thisobj._id) && thisobj._id)/*if _id is null we are a blockout*/ {\n\n\t\t\tSession.set(\"scrollToPoint\", pixelsFromTop);\n\t\t} else if (Session.equals(\"changedAppointmentID\", thisobj._id)\n\t\t\t\t&& typeof Session.get(\"changedAppointmentID\") !== \"undefined\") {\n\t\t\tSession.set(\"scrollToPoint\", pixelsFromTop);\n\t\t\tSession.set(\"changedAppointmentID\", null);\n\t\t}\n\t\treturn pixelsFromTop + \"px\";\n\t}\n};"]}},{"type":"js","data":"(function(){Template.calendar.helpers({\n\tdateString: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).format(\"MMMM YYYY\");\n\t},\n\tprevmonth: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).subtract(1, \"month\").format(\"MMMM\")\n\t},\n\tnextmonth: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).add(1, \"month\").format(\"MMMM\")\n\t},\n});\n\nTemplate.calendar.rendered = function() {\n\tvar currentView = $(\"#innercalendar\").fullCalendar(\"getView\");\n\t$(\"#innercalendar\").fullCalendar('gotoDate', Session.get(\"calendarStart\"));\n\t\n\tTracker.autorun(function() {\n\t\ttry {\n\t\t\tif (Router.current().route.getName() == \"calendar\") {\n\t\t\t\t$('#innercalendar').fullCalendar(\"removeEvents\");\n\t\t\t\tconsole.log(\"populating calendar - \" + unusualDays.find().count());\n\t\t\t\tvar containingObject = { events: []};\n\t\t\t\t_.forEach(unusualDays.find().fetch(), function(day) {\n\t\t\t\t\tvar title =  \"Cab Booked!\";\n\t\t\t\t\tif (typeof day.notes !== \"undefined\") {\n\t\t\t\t\t\ttitle = title + \" \\n\" + day.notes;\n\t\t\t\t\t}\n\t\t\t\t\tcontainingObject.events.push({title:title, start: day.date, allDay: true })\n\t\t\t\t});\n\t\t\t\t$('#innercalendar').fullCalendar(\"addEventSource\", containingObject)\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.error(\"caught error while populating calendar\");\n\t\t\tconsole.log(e);\n\t\t}\n\n\t});\n\n};\nTemplate.calendar.events({\n\t'viewRender #innercalendar': function(event, view, element) {\n\t\tconsole.log('meteor event triggered');\n\t\tconsole.log(view.start);\n\t},\n\t'click div#nextMonth button': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tvar newdate = moment(Session.get(\"date\")).add(1, \"month\");\n\t\tRouter.go(\"/calendar/\"+newdate.format(\"YYYY\")+\"/\"+newdate.format(\"MMMM\"))\n\t},\n\t'click div#prevMonth button': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tvar newdate = moment(Session.get(\"date\")).subtract(1, \"month\");\n\t\tRouter.go(\"/calendar/\"+newdate.format(\"YYYY\")+\"/\"+newdate.format(\"MMMM\"))\n\t},\n});\n}).call(this);\n","servePath":"/client/views/calendarview/calendar.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/calendarview/calendar.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/client/views/calendarview/calendar.js","sourcesContent":["Template.calendar.helpers({\n\tdateString: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).format(\"MMMM YYYY\");\n\t},\n\tprevmonth: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).subtract(1, \"month\").format(\"MMMM\")\n\t},\n\tnextmonth: function() {\n\t\treturn moment(Session.get(\"calendarStart\")).add(1, \"month\").format(\"MMMM\")\n\t},\n});\n\nTemplate.calendar.rendered = function() {\n\tvar currentView = $(\"#innercalendar\").fullCalendar(\"getView\");\n\t$(\"#innercalendar\").fullCalendar('gotoDate', Session.get(\"calendarStart\"));\n\t\n\tTracker.autorun(function() {\n\t\ttry {\n\t\t\tif (Router.current().route.getName() == \"calendar\") {\n\t\t\t\t$('#innercalendar').fullCalendar(\"removeEvents\");\n\t\t\t\tconsole.log(\"populating calendar - \" + unusualDays.find().count());\n\t\t\t\tvar containingObject = { events: []};\n\t\t\t\t_.forEach(unusualDays.find().fetch(), function(day) {\n\t\t\t\t\tvar title =  \"Cab Booked!\";\n\t\t\t\t\tif (typeof day.notes !== \"undefined\") {\n\t\t\t\t\t\ttitle = title + \" \\n\" + day.notes;\n\t\t\t\t\t}\n\t\t\t\t\tcontainingObject.events.push({title:title, start: day.date, allDay: true })\n\t\t\t\t});\n\t\t\t\t$('#innercalendar').fullCalendar(\"addEventSource\", containingObject)\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.error(\"caught error while populating calendar\");\n\t\t\tconsole.log(e);\n\t\t}\n\n\t});\n\n};\nTemplate.calendar.events({\n\t'viewRender #innercalendar': function(event, view, element) {\n\t\tconsole.log('meteor event triggered');\n\t\tconsole.log(view.start);\n\t},\n\t'click div#nextMonth button': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tvar newdate = moment(Session.get(\"date\")).add(1, \"month\");\n\t\tRouter.go(\"/calendar/\"+newdate.format(\"YYYY\")+\"/\"+newdate.format(\"MMMM\"))\n\t},\n\t'click div#prevMonth button': function(event) {\n\t\tevent.stopImmediatePropagation();\n\t\tvar newdate = moment(Session.get(\"date\")).subtract(1, \"month\");\n\t\tRouter.go(\"/calendar/\"+newdate.format(\"YYYY\")+\"/\"+newdate.format(\"MMMM\"))\n\t},\n});"]}},{"type":"js","data":"(function(){Template.providerEdit.helpers({\n\teditingProvider: function(){\n\t\treturn providers.findOne({name: Session.get(\"selectedProviderName\")})\n\t}\n})\n}).call(this);\n","servePath":"/client/views/providers/providerEdit.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/providers/providerEdit.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA,E","file":"/client/views/providers/providerEdit.js","sourcesContent":["Template.providerEdit.helpers({\n\teditingProvider: function(){\n\t\treturn providers.findOne({name: Session.get(\"selectedProviderName\")})\n\t}\n})"]}},{"type":"js","data":"(function(){Template.providerList.helpers({\n\tproviderList: function() {return providers.find();}\n});\nTemplate.providerList.events({\n\t'click .providerName': function(event){\n\t\ttry {\n\t\t\tAutoForm.resetForm(\"updateProviderForm\")\n\t\t} catch (e) {}\n\t\tSession.set(\"selectedProviderName\", $(event.currentTarget).data(\"name\"));\n\t},\n\t'click .providerDeleteButton': function(event){\n\t\tif (confirm(\"Are you absolutely sure? This will delete *ALL* this providers data and appointments!\"))\n\t\t\t{\n\t\t\t\tif (confirm(\"ALL appointments and data related to this provider will be deleted. Are you totally, complete, utterly sure?\")){\n\t\t\t\t\tproviders.remove($(event.currentTarget).parent().data(\"id\"), function(err, result) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t},\n\t'click #newProviderButton': function(event){\n\t\tproviders.insert({name: \"New Provider\"}, function(error, id) {\n\t\t\tSession.set(\"selectedProviderName\", providers.findOne(id).name);\n\t\t});\n\t}\n});\n\n}).call(this);\n","servePath":"/client/views/providers/providerList.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/providers/providerList.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/providers/providerList.js","sourcesContent":["Template.providerList.helpers({\n\tproviderList: function() {return providers.find();}\n});\nTemplate.providerList.events({\n\t'click .providerName': function(event){\n\t\ttry {\n\t\t\tAutoForm.resetForm(\"updateProviderForm\")\n\t\t} catch (e) {}\n\t\tSession.set(\"selectedProviderName\", $(event.currentTarget).data(\"name\"));\n\t},\n\t'click .providerDeleteButton': function(event){\n\t\tif (confirm(\"Are you absolutely sure? This will delete *ALL* this providers data and appointments!\"))\n\t\t\t{\n\t\t\t\tif (confirm(\"ALL appointments and data related to this provider will be deleted. Are you totally, complete, utterly sure?\")){\n\t\t\t\t\tproviders.remove($(event.currentTarget).parent().data(\"id\"), function(err, result) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t},\n\t'click #newProviderButton': function(event){\n\t\tproviders.insert({name: \"New Provider\"}, function(error, id) {\n\t\t\tSession.set(\"selectedProviderName\", providers.findOne(id).name);\n\t\t});\n\t}\n});\n"]}},{"type":"js","data":"(function(){//login page as the first page\n\nTemplate.loginPage.rendered = function() {\n};\nTracker.autorun(function() {\n\ttry {\n\t\tif(Meteor.user() && Router.current().route.getName() == \"loginPage\") {\n\t\t\tRouter.go('/'+Session.get('loginRedirect'))\n\t\t}\n\t}\n\tcatch (e) {}\n});\n\n//input fields\nAccountsTemplates.addFields([\n    {\n        _id: \"username\",\n        type: \"text\",\n        displayName: \"username\",\n        required: true,\n        minLength: 4\n    },\n    {\n        _id: \"password\",\n        type: \"password\",\n        displayName: \"password\",\n        required: true,\n        minLength:4\n    }\n\n]);\n\n}).call(this);\n","servePath":"/client/views/users/login.js","sourceMap":{"version":3,"sources":["/client/views/users/login.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/users/login.js","sourcesContent":["//login page as the first page\n\nTemplate.loginPage.rendered = function() {\n};\nTracker.autorun(function() {\n\ttry {\n\t\tif(Meteor.user() && Router.current().route.getName() == \"loginPage\") {\n\t\t\tRouter.go('/'+Session.get('loginRedirect'))\n\t\t}\n\t}\n\tcatch (e) {}\n});\n\n//input fields\nAccountsTemplates.addFields([\n    {\n        _id: \"username\",\n        type: \"text\",\n        displayName: \"username\",\n        required: true,\n        minLength: 4\n    },\n    {\n        _id: \"password\",\n        type: \"password\",\n        displayName: \"password\",\n        required: true,\n        minLength:4\n    }\n\n]);\n"]}},{"type":"js","data":"(function(){Template.registration.helpers({})\n//form for registering new users\nAutoForm.hooks({\n\tregistrationForm: {\n\t\tonSubmit: function(insertDoc, updateDoc, currentDoc) {\n\t\t\tMeteor.users.simpleSchema().clean(insertDoc);\n\t\t\tconsole.log(insertDoc);\n\t\t\tAccounts.createUser({ //input fields\n\t\t\t\t\tusername: insertDoc.username,\n\t\t\t\t\temails: insertDoc.emails,\n\t\t\t\t\tpassword: insertDoc.password,\n\t\t\t\t\troles: insertDoc.roles\n\t\t\t\t}, function(error, status) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\t\tthis.event.preventDefault();\n\t\t\treturn false;\n\t\t}\n\t}\n})\n}).call(this);\n","servePath":"/client/views/users/registration.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/users/registration.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/client/views/users/registration.js","sourcesContent":["Template.registration.helpers({})\n//form for registering new users\nAutoForm.hooks({\n\tregistrationForm: {\n\t\tonSubmit: function(insertDoc, updateDoc, currentDoc) {\n\t\t\tMeteor.users.simpleSchema().clean(insertDoc);\n\t\t\tconsole.log(insertDoc);\n\t\t\tAccounts.createUser({ //input fields\n\t\t\t\t\tusername: insertDoc.username,\n\t\t\t\t\temails: insertDoc.emails,\n\t\t\t\t\tpassword: insertDoc.password,\n\t\t\t\t\troles: insertDoc.roles\n\t\t\t\t}, function(error, status) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\t\tthis.event.preventDefault();\n\t\t\treturn false;\n\t\t}\n\t}\n})"]}},{"type":"js","data":"(function(){subs = new SubsManager({\n\tcacheLimit: 20,//number of subs to cache\n\texpireIn: 20//minutes to hold on to subs\n});\n\nRouter.configure({\n  \n  notFoundTemplate: 'notFound',\n  \n\tlayoutTemplate: 'singlePageMasterLayout'\n});\nRouter.onBeforeAction(mustBeSignedIn, {except: ['loginPage']});\nfunction mustBeSignedIn() {\n\tif (Meteor.loggingIn()) {\n\t\t//console.log(\"currently logging in\");\n\t\tthis.render('loading');\n\t} else {\n\t\tuser = Meteor.user();\n\t\tif (!user) {\n\t\t\t//console.log(\"need to log in\");\n\t\t\tconsole.log(Router.current().route.getName());\n\t\t\tthis.render(\"loginPage\");\n\t\t\t//Router.go('loginPage', {redirect: Router.current().route.path()});\n\t\t} else {\n\t\t\tthis.next();\n\t\t}\n\t}\n}\nRouter.onBeforeAction(correctProviderName, {except: ['loginPage']});\nfunction correctProviderName() {\n\tif (Roles.userIsInRole(Meteor.user(), \"provider\") && Meteor.user().providerName !== Session.get(\"selectedProviderName\")) {\n\t\tSession.set(\"selectedProviderName\",Meteor.user().providerName);\n\t}\n\tthis.next();\n}\nRouter.onBeforeAction(cleanupTimer);\nfunction cleanupTimer() {\n\t\n\tthis.next();\n}\n\nreturnStandardSubs = function(date, providerName, appntId, blockId) {\n\t//date should be a string in YYYY-MM-DD format\n\tif (!providers.findOne({name: providerName})) {\n\t\tproviderName = providers.findOne().name;\n\t\t\n\t}\n\tvar thedate = moment(date, 'YYYY-MM-DD').startOf('day').toDate();\n\tvar list = [];\n\tif (typeof date === \"string\" && typeof providerName === \"string\") {\n\t\tSession.set(\"date\", thedate);\n\t\tSession.set(\"selectedProviderName\", providerName);\n\t\tlist = list.concat([Meteor.subscribe('appointmentList', Session.get('date'), Session.get(\"selectedProviderName\")),\n\t\t\tMeteor.subscribe(\"unusualDays\", Session.get(\"date\")),\n\t\t\tMeteor.subscribe('blockouts', Session.get('date'), Session.get(\"selectedProviderName\"))]);\n\t}\n\tif (typeof appntId === \"string\") {\n\t\tlist = list.concat(Meteor.subscribe('singleAppoint', appntId));\n\t} \n\t\n\treturn list;\n\n\n\n};\n\n\nRouter.route('index', {\n\tpath: '/',\n\taction: function() {\n\t\tif (this.ready()) {\n\t\t\tRouter.go('bookingTable',\n\t\t\t\t{date: moment().startOf('day').format('YYYY-MM-DD'),\n\t\t\t\t\tproviderName: providers.findOne().name});\n\t\t}\n\t}\n});\n\n\nRouter.route('newAppointment', {\n\tpath: '/new/:date/:providerName/:time?',\n\tlayoutTemplate: \"sideEditMasterTemplate\",\n\ttemplate: 'appointmentEdit',\n\t\n\twaitOn: function() {\n\t\tif (Meteor.user()) {\n\t\t\tconsole.log(\"NewAppointment here, grabbing my standard subs!\");\n\t\t\treturn returnStandardSubs(this.params.date, this.params.providerName, null, null);\n\t\t}\n\n\t},\n\tonBeforeAction: function () {\n\t\tconsole.log(\"new onbeforeaction\");\n\n\t\tSession.set(\"formForInsert\", true);\n\t\tSession.set(\"currentlyEditingDoc\", null);\n\t\t\n\t\tif (this.params.time) {\n\t\t\tSession.set(\"newTime\", this.params.time.replace('-', ':').replace('-', ' '));\n\t\t}\n\t\tthis.next();\n\t},\n\taction: function() {\n\t\tconsole.log(\"newAppointment action\");\n\t\tif(this.ready()) {\n\t\t\tconsole.log(\"newAppointment ready\");\n\t\t\tthis.render('bookingTable', {to: \"right\"});\n\t\t\tthis.render();\n\t\t}\n\t},\n\tonStop: function() {\n\t\tSession.set(\"newTime\", null);//remove Highlight\n\t}\n});\nRouter.route('editAppointment', {\n\tpath: '/edit/:id',\n\tlayoutTemplate: \"sideEditMasterTemplate\",\n\ttemplate: 'appointmentEdit',\n\t\n\tonBeforeAction: function () {\n\t\tconsole.log(\"edit onbeforeaction\");\n\t\t\tvar handle = Meteor.subscribe('singleAppoint', this.params.id);\n\t\t\tif (handle.ready()) {\n\t\t\t\tvar appoint = appointmentList.findOne(this.params.id);\n\t\t\t\tif (!appoint) {this.render(\"notFound\")}\n\t\t\t\tSession.set('date', moment(appoint.date).startOf('day').toDate());\n\t\t\t\tSession.set('selectedProviderName', appoint.providerName);\n\t\t\t\tTracker.autorun(function() {\n\t\t\t\t\tvar subs = returnStandardSubs(moment(Session.get('date')).startOf('day').format('YYYY-MM-DD'),\n\t\t\t\t\t\tSession.get('selectedProviderName'),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull);\n\t\t\t\t});\n\t\t\t\t//this.wait(subs);\n\t\t\t\tSession.set(\"formForInsert\", false);\n\t\t\t\tSession.set(\"currentlyEditingDoc\", this.params.id);\n\t\t\t\tthis.next();\n\t\t\t}\n\n\n\n\t},\n\taction: function() {\n\t\tif(this.ready()) {\n\t\t\tthis.render('bookingTable', {to: 'right'});\n\t\t\tthis.render();\n\t\t}\n\t},\n\tonAfterAction: function() {\n\t\t//console.log(\"edit onafteraction\");\n\t},\n\tonStop: function() {\n\t\t//console.log(\"edit onstop\");\n\t\tSession.set(\"formForInsert\", true);\n\t\tSession.set(\"currentlyEditingDoc\", null);\n\t}\n});\n\n\nRouter.route('userList', {\n\tpath: '/users',\n\twaitOn: function() {\n\t\tif(Meteor.user()) {\n\t\t\treturn Meteor.subscribe(\"userList\");\n\t\t}\n\t}\n});\n\nRouter.route('loginPage', {\n\tpath: '/login/(.*)',\n\ttemplate: 'loginPage',\n\tonBeforeAction: function() {\n\t\tif(this.params) {\n\t\t\tSession.set('loginRedirect', this.params[0]);\n\t\t}\n\t\t//console.log(this.params[0]);\n\t\tthis.next();\n\t}\n});\n\n\n\nRouter.route('calendar', {\n\ttemplate:\"calendar\",\n\tpath: '/calendar/:year/:month',\n\twaitOn: function() {\n\t\tif (Meteor.user()) {\n\t\t\tvar startDate = moment().year(this.params.year).month(this.params.month).startOf('month').subtract(5, \"days\");\n\t\t\tvar endDate = moment().year(this.params.year).month(this.params.month).endOf('month').add(10, \"days\");\n\t\t\treturn Meteor.subscribe(\"unusualDaysRange\", startDate.toDate(), endDate.toDate());\n\t\t}\n\t},\n\tonBeforeAction: function() {\n\t\tSession.set(\"calendarStart\", moment().year(this.params.year).month(this.params.month).startOf('month').toDate());\n\t\tSession.set(\"calendarEnd\", moment().year(this.params.year).month(this.params.month).endOf('month').toDate());\n\t\tSession.set(\"date\", moment().year(this.params.year).month(this.params.month).startOf('month').toDate());\n\t\tthis.next();\n\t}\n});\n\nRouter.route('bookingTable', {\n\tpath: '/:date/:providerName',\n\twaitOn: function() {\n\t\tif(Meteor.user()) {\n\t\t\treturn returnStandardSubs(this.params.date, this.params.providerName);\n\t\t}\n\t},\n\tonBeforeAction: function () {\n\t\tSession.setDefault(\"formForInsert\", true);\n\t\tAutoForm.resetForm(\"insertAppointmentFormInner\");\n\t\tAutoForm.resetForm(\"insertBlockoutFormInner\");\n\t\tSession.set(\"newTime\", null);\n\t\tthis.next();\n\t},\n\taction: function() {\n\t\tif(this.ready()) {\n\t\t\tthis.render();\n\t\t}\n\t}\n});\n\n\n\n}).call(this);\n","servePath":"/client/routes/routes.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/routes/routes.js"],"names":[],"mappings":"yfile":"/client/routes/routes.js","sourcesContent":["subs = new SubsManager({\n\tcacheLimit: 20,//number of subs to cache\n\texpireIn: 20//minutes to hold on to subs\n});\n\nRouter.configure({\n  \n  notFoundTemplate: 'notFound',\n  \n\tlayoutTemplate: 'singlePageMasterLayout'\n});\nRouter.onBeforeAction(mustBeSignedIn, {except: ['loginPage']});\nfunction mustBeSignedIn() {\n\tif (Meteor.loggingIn()) {\n\t\t//console.log(\"currently logging in\");\n\t\tthis.render('loading');\n\t} else {\n\t\tuser = Meteor.user();\n\t\tif (!user) {\n\t\t\t//console.log(\"need to log in\");\n\t\t\tconsole.log(Router.current().route.getName());\n\t\t\tthis.render(\"loginPage\");\n\t\t\t//Router.go('loginPage', {redirect: Router.current().route.path()});\n\t\t} else {\n\t\t\tthis.next();\n\t\t}\n\t}\n}\nRouter.onBeforeAction(correctProviderName, {except: ['loginPage']});\nfunction correctProviderName() {\n\tif (Roles.userIsInRole(Meteor.user(), \"provider\") && Meteor.user().providerName !== Session.get(\"selectedProviderName\")) {\n\t\tSession.set(\"selectedProviderName\",Meteor.user().providerName);\n\t}\n\tthis.next();\n}\nRouter.onBeforeAction(cleanupTimer);\nfunction cleanupTimer() {\n\t\n\tthis.next();\n}\n\nreturnStandardSubs = function(date, providerName, appntId, blockId) {\n\t//date should be a string in YYYY-MM-DD format\n\tif (!providers.findOne({name: providerName})) {\n\t\tproviderName = providers.findOne().name;\n\t\t\n\t}\n\tvar thedate = moment(date, 'YYYY-MM-DD').startOf('day').toDate();\n\tvar list = [];\n\tif (typeof date === \"string\" && typeof providerName === \"string\") {\n\t\tSession.set(\"date\", thedate);\n\t\tSession.set(\"selectedProviderName\", providerName);\n\t\tlist = list.concat([Meteor.subscribe('appointmentList', Session.get('date'), Session.get(\"selectedProviderName\")),\n\t\t\tMeteor.subscribe(\"unusualDays\", Session.get(\"date\")),\n\t\t\tMeteor.subscribe('blockouts', Session.get('date'), Session.get(\"selectedProviderName\"))]);\n\t}\n\tif (typeof appntId === \"string\") {\n\t\tlist = list.concat(Meteor.subscribe('singleAppoint', appntId));\n\t} \n\t\n\treturn list;\n\n\n\n};\n\n\nRouter.route('index', {\n\tpath: '/',\n\taction: function() {\n\t\tif (this.ready()) {\n\t\t\tRouter.go('bookingTable',\n\t\t\t\t{date: moment().startOf('day').format('YYYY-MM-DD'),\n\t\t\t\t\tproviderName: providers.findOne().name});\n\t\t}\n\t}\n});\n\n\nRouter.route('newAppointment', {\n\tpath: '/new/:date/:providerName/:time?',\n\tlayoutTemplate: \"sideEditMasterTemplate\",\n\ttemplate: 'appointmentEdit',\n\t\n\twaitOn: function() {\n\t\tif (Meteor.user()) {\n\t\t\tconsole.log(\"NewAppointment here, grabbing my standard subs!\");\n\t\t\treturn returnStandardSubs(this.params.date, this.params.providerName, null, null);\n\t\t}\n\n\t},\n\tonBeforeAction: function () {\n\t\tconsole.log(\"new onbeforeaction\");\n\n\t\tSession.set(\"formForInsert\", true);\n\t\tSession.set(\"currentlyEditingDoc\", null);\n\t\t\n\t\tif (this.params.time) {\n\t\t\tSession.set(\"newTime\", this.params.time.replace('-', ':').replace('-', ' '));\n\t\t}\n\t\tthis.next();\n\t},\n\taction: function() {\n\t\tconsole.log(\"newAppointment action\");\n\t\tif(this.ready()) {\n\t\t\tconsole.log(\"newAppointment ready\");\n\t\t\tthis.render('bookingTable', {to: \"right\"});\n\t\t\tthis.render();\n\t\t}\n\t},\n\tonStop: function() {\n\t\tSession.set(\"newTime\", null);//remove Highlight\n\t}\n});\nRouter.route('editAppointment', {\n\tpath: '/edit/:id',\n\tlayoutTemplate: \"sideEditMasterTemplate\",\n\ttemplate: 'appointmentEdit',\n\t\n\tonBeforeAction: function () {\n\t\tconsole.log(\"edit onbeforeaction\");\n\t\t\tvar handle = Meteor.subscribe('singleAppoint', this.params.id);\n\t\t\tif (handle.ready()) {\n\t\t\t\tvar appoint = appointmentList.findOne(this.params.id);\n\t\t\t\tif (!appoint) {this.render(\"notFound\")}\n\t\t\t\tSession.set('date', moment(appoint.date).startOf('day').toDate());\n\t\t\t\tSession.set('selectedProviderName', appoint.providerName);\n\t\t\t\tTracker.autorun(function() {\n\t\t\t\t\tvar subs = returnStandardSubs(moment(Session.get('date')).startOf('day').format('YYYY-MM-DD'),\n\t\t\t\t\t\tSession.get('selectedProviderName'),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull);\n\t\t\t\t});\n\t\t\t\t//this.wait(subs);\n\t\t\t\tSession.set(\"formForInsert\", false);\n\t\t\t\tSession.set(\"currentlyEditingDoc\", this.params.id);\n\t\t\t\tthis.next();\n\t\t\t}\n\n\n\n\t},\n\taction: function() {\n\t\tif(this.ready()) {\n\t\t\tthis.render('bookingTable', {to: 'right'});\n\t\t\tthis.render();\n\t\t}\n\t},\n\tonAfterAction: function() {\n\t\t//console.log(\"edit onafteraction\");\n\t},\n\tonStop: function() {\n\t\t//console.log(\"edit onstop\");\n\t\tSession.set(\"formForInsert\", true);\n\t\tSession.set(\"currentlyEditingDoc\", null);\n\t}\n});\n\n\nRouter.route('userList', {\n\tpath: '/users',\n\twaitOn: function() {\n\t\tif(Meteor.user()) {\n\t\t\treturn Meteor.subscribe(\"userList\");\n\t\t}\n\t}\n});\n\nRouter.route('loginPage', {\n\tpath: '/login/(.*)',\n\ttemplate: 'loginPage',\n\tonBeforeAction: function() {\n\t\tif(this.params) {\n\t\t\tSession.set('loginRedirect', this.params[0]);\n\t\t}\n\t\t//console.log(this.params[0]);\n\t\tthis.next();\n\t}\n});\n\n\n\nRouter.route('calendar', {\n\ttemplate:\"calendar\",\n\tpath: '/calendar/:year/:month',\n\twaitOn: function() {\n\t\tif (Meteor.user()) {\n\t\t\tvar startDate = moment().year(this.params.year).month(this.params.month).startOf('month').subtract(5, \"days\");\n\t\t\tvar endDate = moment().year(this.params.year).month(this.params.month).endOf('month').add(10, \"days\");\n\t\t\treturn Meteor.subscribe(\"unusualDaysRange\", startDate.toDate(), endDate.toDate());\n\t\t}\n\t},\n\tonBeforeAction: function() {\n\t\tSession.set(\"calendarStart\", moment().year(this.params.year).month(this.params.month).startOf('month').toDate());\n\t\tSession.set(\"calendarEnd\", moment().year(this.params.year).month(this.params.month).endOf('month').toDate());\n\t\tSession.set(\"date\", moment().year(this.params.year).month(this.params.month).startOf('month').toDate());\n\t\tthis.next();\n\t}\n});\n\nRouter.route('bookingTable', {\n\tpath: '/:date/:providerName',\n\twaitOn: function() {\n\t\tif(Meteor.user()) {\n\t\t\treturn returnStandardSubs(this.params.date, this.params.providerName);\n\t\t}\n\t},\n\tonBeforeAction: function () {\n\t\tSession.setDefault(\"formForInsert\", true);\n\t\tAutoForm.resetForm(\"insertAppointmentFormInner\");\n\t\tAutoForm.resetForm(\"insertBlockoutFormInner\");\n\t\tSession.set(\"newTime\", null);\n\t\tthis.next();\n\t},\n\taction: function() {\n\t\tif(this.ready()) {\n\t\t\tthis.render();\n\t\t}\n\t}\n});\n\n\n"]}},{"type":"js","data":"(function(){/**\n * Created by Mitchell on 3/12/2015.\n */\nTemplate.datepicker.rendered = function() {\n\n\tif($(\"#datetimepicker1\").is(\":visible\")) {\n\t\t$('#datetimepicker1').datetimepicker({\n\t\t\tformat: \"YYYY-MM-DD\"\n\t\t});\n\t\tTracker.autorun(function (comp) {\n\t\t\ttry {\n\t\t\t\t$('#datetimepicker1').data(\"DateTimePicker\").date(moment(Session.get(\"date\")));\n\t\t\t} catch (e) {\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t\t$('#datetimepicker1').on(\"dp.change\", function(e) {\n\t\t\tchangeParams({date: e.date.format(\"YYYY-MM-DD\")});\n\t\t})\n\t}\n};\n\n\n}).call(this);\n","servePath":"/client/views/datepicker.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/datepicker.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/views/datepicker.js","sourcesContent":["/**\n * Created by Mitchell on 3/12/2015.\n */\nTemplate.datepicker.rendered = function() {\n\n\tif($(\"#datetimepicker1\").is(\":visible\")) {\n\t\t$('#datetimepicker1').datetimepicker({\n\t\t\tformat: \"YYYY-MM-DD\"\n\t\t});\n\t\tTracker.autorun(function (comp) {\n\t\t\ttry {\n\t\t\t\t$('#datetimepicker1').data(\"DateTimePicker\").date(moment(Session.get(\"date\")));\n\t\t\t} catch (e) {\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t\t$('#datetimepicker1').on(\"dp.change\", function(e) {\n\t\t\tchangeParams({date: e.date.format(\"YYYY-MM-DD\")});\n\t\t})\n\t}\n};\n\n"]}},{"type":"js","data":"(function(){\n\nfunction addFormControlAtts() {\n\tvar atts = _.clone(this.atts);\n\tif (typeof atts[\"class\"] === \"string\") {\n\t\tatts[\"class\"] += \" form-control\";\n\t} else {\n\t\tatts[\"class\"] = \"form-control\";\n\t}\n\treturn atts;\n}\nTemplate.afInputTimePicker.atts = addFormControlAtts;\n\nTemplate.afInputTimePicker.rendered  = function() {\n\tthis.$('#datetimepicker').datetimepicker({\n\t\tformat: \"h:mm A\",\n\t\tstepping:5\n\t});\n\tself = this;\n\tthis.autorun(function () {\n\t\tvar data = Template.currentData();\n\t\tvar dtp = self.$(\"#datetimepicker\").data(\"DateTimePicker\");\n\n\t\t// set field value\n\t\tif (data.value instanceof Date) {\n\t\t\tdtp.date(data.value);\n\t\t} else {\n\t\t\tdtp.date(); // clear\n\t\t}\n\t});\n\tthis.autorun(function(comp) {\n\t\ttry{\n\t\t\tif (Session.get(\"newTime\") && Session.get(\"formForInsert\") &&\n\t\t\t\t(Router.current().route.getName() === \"newAppointment\" ||\n\t\t\t\tRouter.current().route.getName() === \"newBlockout\")) {\n\t\t\t\tconsole.log(\"setting DateTimePicker value from newTime\");\n\t\t\t\tself.$('#datetimepicker').data(\"DateTimePicker\").date(moment(Session.get(\"newTime\"), \"h:mm A\"))\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t\n\t\t\tconsole.log(e);\n\t\t}\n\t})\n};\nTemplate.afInputTimePicker.events = {\n\t'click #datetimepicker': function (event){\n\t\t$(event.currentTarget).data(\"DateTimePicker\").show();\n\t}\n};\nTemplate.afInputTimePicker.onDestroyed = function() {\n\t$(\"div.bootstrap-datetimepicker-widget\").remove();\n};\nAutoForm.addInputType(\"timePicker\", {\n\ttemplate: \"afInputTimePicker\",\n\tvalueIn: function(val) {\n\t\t\n\t\treturn val;\n\t},\n\tvalueOut: function() {\n\t\ttry {\n\t\t\treturn $('#datetimepicker').data(\"DateTimePicker\").date().toDate();\n\t\t} catch (e) {\n\n\t\t}\n\t}\n});\n}).call(this);\n","servePath":"/client/views/timepicker.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/views/timepicker.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/client/views/timepicker.js","sourcesContent":["\n\nfunction addFormControlAtts() {\n\tvar atts = _.clone(this.atts);\n\tif (typeof atts[\"class\"] === \"string\") {\n\t\tatts[\"class\"] += \" form-control\";\n\t} else {\n\t\tatts[\"class\"] = \"form-control\";\n\t}\n\treturn atts;\n}\nTemplate.afInputTimePicker.atts = addFormControlAtts;\n\nTemplate.afInputTimePicker.rendered  = function() {\n\tthis.$('#datetimepicker').datetimepicker({\n\t\tformat: \"h:mm A\",\n\t\tstepping:5\n\t});\n\tself = this;\n\tthis.autorun(function () {\n\t\tvar data = Template.currentData();\n\t\tvar dtp = self.$(\"#datetimepicker\").data(\"DateTimePicker\");\n\n\t\t// set field value\n\t\tif (data.value instanceof Date) {\n\t\t\tdtp.date(data.value);\n\t\t} else {\n\t\t\tdtp.date(); // clear\n\t\t}\n\t});\n\tthis.autorun(function(comp) {\n\t\ttry{\n\t\t\tif (Session.get(\"newTime\") && Session.get(\"formForInsert\") &&\n\t\t\t\t(Router.current().route.getName() === \"newAppointment\" ||\n\t\t\t\tRouter.current().route.getName() === \"newBlockout\")) {\n\t\t\t\tconsole.log(\"setting DateTimePicker value from newTime\");\n\t\t\t\tself.$('#datetimepicker').data(\"DateTimePicker\").date(moment(Session.get(\"newTime\"), \"h:mm A\"))\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t\n\t\t\tconsole.log(e);\n\t\t}\n\t})\n};\nTemplate.afInputTimePicker.events = {\n\t'click #datetimepicker': function (event){\n\t\t$(event.currentTarget).data(\"DateTimePicker\").show();\n\t}\n};\nTemplate.afInputTimePicker.onDestroyed = function() {\n\t$(\"div.bootstrap-datetimepicker-widget\").remove();\n};\nAutoForm.addInputType(\"timePicker\", {\n\ttemplate: \"afInputTimePicker\",\n\tvalueIn: function(val) {\n\t\t\n\t\treturn val;\n\t},\n\tvalueOut: function() {\n\t\ttry {\n\t\t\treturn $('#datetimepicker').data(\"DateTimePicker\").date().toDate();\n\t\t} catch (e) {\n\n\t\t}\n\t}\n});"]}},{"type":"js","data":"(function(){Template.navbar.events({\n\t'click #nextDay': function() {\n\t\t//if current route == calendar then change current month\n\t\tchangeParams({date: moment(Session.get(\"date\")).add(1, 'day').format(\"YYYY-MM-DD\")});\n\t},\n\t'click #prevDay': function() {\n\t\tchangeParams({date: moment(Session.get(\"date\")).subtract(1, 'day').format(\"YYYY-MM-DD\")});\n\t},\n\t'click #datetimepicker1': function() {\n\t\t$('#datetimepicker1').data(\"DateTimePicker\").show()\n\t},\n\t'click #newAppointButton': function() { //book a cab button\n\t\tnewAppointment('12:00 PM', false);\n\t},\n\t\n\t'click #signOutButton': function() { //sign out button\n\t\tMeteor.logout();\n\t}\n});\nTemplate.navbar.helpers({\n\tisCalendar: function() {\n\t\treturn Router.current().route.getName() === \"calendar\";\n\t},\n\tcalendarMonth: function() {\n\t\treturn moment(Session.get('date')).format(\"MMMM\");\n\t},\n\tcalendarYear: function() {\n\t\treturn moment(Session.get('date')).format(\"YYYY\");\n\t},\n\tloggedIn: function() {\n\t\treturn Meteor.userId();\n\t},\n\thomeLinkDate: function() {\n\t\t\n\t\treturn moment().format('YYYY-MM-DD');///return date in the format yyyy-mm-dd\n\t},\n\t\n});\n\n}).call(this);\n","servePath":"/client/booking.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/booking.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/booking.js","sourcesContent":["Template.navbar.events({\n\t'click #nextDay': function() {\n\t\t//if current route == calendar then change current month\n\t\tchangeParams({date: moment(Session.get(\"date\")).add(1, 'day').format(\"YYYY-MM-DD\")});\n\t},\n\t'click #prevDay': function() {\n\t\tchangeParams({date: moment(Session.get(\"date\")).subtract(1, 'day').format(\"YYYY-MM-DD\")});\n\t},\n\t'click #datetimepicker1': function() {\n\t\t$('#datetimepicker1').data(\"DateTimePicker\").show()\n\t},\n\t'click #newAppointButton': function() { //book a cab button\n\t\tnewAppointment('12:00 PM', false);\n\t},\n\t\n\t'click #signOutButton': function() { //sign out button\n\t\tMeteor.logout();\n\t}\n});\nTemplate.navbar.helpers({\n\tisCalendar: function() {\n\t\treturn Router.current().route.getName() === \"calendar\";\n\t},\n\tcalendarMonth: function() {\n\t\treturn moment(Session.get('date')).format(\"MMMM\");\n\t},\n\tcalendarYear: function() {\n\t\treturn moment(Session.get('date')).format(\"YYYY\");\n\t},\n\tloggedIn: function() {\n\t\treturn Meteor.userId();\n\t},\n\thomeLinkDate: function() {\n\t\t\n\t\treturn moment().format('YYYY-MM-DD');///return date in the format yyyy-mm-dd\n\t},\n\t\n});\n"]}}]