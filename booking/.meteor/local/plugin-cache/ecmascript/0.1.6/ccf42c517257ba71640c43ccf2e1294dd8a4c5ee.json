{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["inherits","class-call-check"]},"ignored":false,"code":"/* global ValidationError:true */\n/* global SimpleSchema */\n\n// This is exactly what comes out of SS.\nvar errorSchema = new SimpleSchema({\n  name: { type: String },\n  type: { type: String },\n  details: { type: Object, blackbox: true, optional: true }\n});\n\nvar errorsSchema = new SimpleSchema({\n  errors: { type: [errorSchema] }\n});\n\nValidationError = (function (_Meteor$Error) {\n  babelHelpers.inherits(_class, _Meteor$Error);\n\n  function _class(errors) {\n    babelHelpers.classCallCheck(this, _class);\n\n    check({ errors: errors }, errorsSchema);\n\n    _Meteor$Error.call(this, ValidationError.ERROR_CODE, 'Validation Failed', errors);\n\n    this.errors = errors;\n  }\n\n  return _class;\n})(Meteor.Error);\n\n// If people use this to check for the error code, we can change it\n// in future versions\nValidationError.ERROR_CODE = 'validation-error';","ast":null,"map":{"version":3,"sources":["/validation-error.js"],"names":[],"mappings":";;;;AAIA,IAAM,WAAW,GAAG,IAAI,YAAY,CAAC;AACnC,MAAI,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC;AACpB,MAAI,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC;AACpB,SAAO,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC;CACxD,CAAC,CAAC;;AAEH,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC;AACpC,QAAM,EAAE,EAAC,IAAI,EAAE,CAAC,WAAW,CAAC,EAAC;CAC9B,CAAC,CAAC;;AAEH,eAAe;;;AACF,kBAAC,MAAM,EAAE;;;AAClB,SAAK,CAAC,EAAC,MAAM,EAAN,MAAM,EAAC,EAAE,YAAY,CAAC,CAAC;;AAE9B,6BAAM,eAAe,CAAC,UAAU,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;;AAE/D,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;GACtB;;;GAP6B,MAAM,CAAC,KAAK,CAQ3C,CAAC;;;;AAIF,eAAe,CAAC,UAAU,GAAG,kBAAkB,CAAC","file":"/validation-error.js.map","sourcesContent":["/* global ValidationError:true */\n/* global SimpleSchema */\n\n// This is exactly what comes out of SS.\nconst errorSchema = new SimpleSchema({\n  name: {type: String},\n  type: {type: String},\n  details: {type: Object, blackbox: true, optional: true}\n});\n\nconst errorsSchema = new SimpleSchema({\n  errors: {type: [errorSchema]}\n});\n\nValidationError = class extends Meteor.Error {\n  constructor(errors) {\n    check({errors}, errorsSchema);\n\n    super(ValidationError.ERROR_CODE, 'Validation Failed', errors);\n\n    this.errors = errors;\n  }\n};\n\n// If people use this to check for the error code, we can change it\n// in future versions\nValidationError.ERROR_CODE = 'validation-error';\n"]},"hash":"ccf42c517257ba71640c43ccf2e1294dd8a4c5ee"}
